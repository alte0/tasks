{"version":3,"sources":["components/container/container.js","components/footer/footer.js","plugins/show-message.js","helpers/helpers.js","plugins/flatpickr.js","plugins/editor.js","data/data.js","components/search-by-tasks/search-by-tasks.js","components/user-menu/user-menu.js","components/task/task.js","components/tasks/tasks.js","components/pagination/pagination.js","components/loading-data/loading-data.js","pages/page-tasks.js","vars/vars.js","components/forms/form-sing-in.js","pages/page-sign-in.js","components/forms/form-sing-up.js","pages/page-sign-up.js","components/forms/form-add-task.js","pages/page-add-task.js","pages/page-task.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","className","children","Footer","toastr","options","closeButton","debug","newestOnTop","progressBar","positionClass","onclick","showDuration","hideDuration","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","showMessage","type","message","title","time","preventDuplicates","timeOut","TypeMessage","INFO","SUCCESS","WARNING","ERROR","checkLengthMinMaxStr","str","minLengthStr","maxLengthStr","length","hasDateExpired","dateTask","today","Date","getTime","reverseDate","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","fp","editor","deleteCookie","value","path","expires","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","setCookie","date","split","reverse","join","getActiveTitleTasks","url","textSearch","deleteTaskFromArrTasks","tasks","idTask","copyTasks","indexTask","findIndex","task","Number","task_id","splice","decodeParamsSearchUrl","urlOrigin","URL","searchParams","has","searchTextEncode","get","fetchRequest","link","a","async","params","method","cache","fetch","response","json","getMyTasks","getMyTasksDone","getDesignatedTasks","getDesignatedTasksDone","executeTask","addTask","formData","body","signUpUser","signInUser","SearchByTasks","initialState","valid","state","_handleChangeTextSearch","bind","_handleSubmitFormSearch","onSubmit","this","placeholder","onChange","disabled","evt","target","setState","Boolean","trim","preventDefault","history","push","Component","withRouter","UserMenu","user","handleClickExit","surname","patronymic","textLink","href","getActiveMenuLinks","map","item","index","key","to","onClick","sanitizer","dompurify","sanitize","getTaskContent","isShow","stringAndTags","isShowDesc","isMore","userId","task_date_end","task_title","task_desc","task_date_start","task_status","task_date_no_limit","author_name","author_surname","author_patronymic","executor_id","executor_name","executor_patronymic","executor_surname","Fragment","dangerouslySetInnerHTML","__html","data-id-task","data-title","handleClickExecuteTask","location","pathname","Task","isTasks","classTaskExpired","option","Tasks","classTaskItem","handleClickMore","Pagination","pagesCount","pageCurrentPagination","arr","Array","fill","lastPage","pagePrev","pageNext","handleClickChangePagePagination","data-page-id-pag","it","LoadingData","PageTasks","itemsTasks","loading","_handleClickExecuteTask","_handleClickChangePagePagination","_getSearchData","dataFunc","_getFuncData","_getData","prevProps","isLoggedIn","visibleTasks","slice","fn","then","msgsType","lengthTasks","Math","ceil","catch","e","console","error","finally","dataset","window","confirm","result","textMsgs","pageIdPag","text","ConfMinAndMax","Object","freeze","MIN_LENGTH_LOGIN","MAX_LENGTH_LOGIN","MIN_LENGTH_PASSWORD","MAX_LENGTH_PASSWORD","MIN_LENGTH_TEXT","MAX_LENGTH_TEXT","ConfMinAndMaxAddTask","MAX_LENGTH_TEXT_TITLE","MAX_LENGTH_TEXT_DESK","FormSingIn","REDIRECTION_SIGN_IN_TIME","REDIRECTION_TASKS_TIME","_validateForm","login","password","isValidLogin","isValidPassword","_handleLoginChange","validForm","assign","_handlePasswordChange","_handleSubmitForm","FormData","append","setLoggedIn","getFullName","htmlFor","id","minLength","maxLength","required","PageSingIn","FormSingUp","password2","isValidPassword2","isValidEquallyPassword","isValidName","isValidSurname","isValidPatronymic","_handlePassword2Change","_handleNameChange","_handleSurnameChange","handlePatronymicChange","_onBlurInput","onBlur","PageSingUp","CONFIG_FLATPICKR","locale","Russian","defaultDate","mode","dateFormat","minDate","weekNumbers","wrap","clearDataFlatpickr","clear","setDate","CONFIG","removePlugins","toolbar","language","mediaEmbed","previewsInData","clearDataEditor","setData","FormAddTask","selectedDates","valueSelect","titleTask","descTask","isValidValueSelect","isValidTitleTask","isValidDescTask","_handleDatesChange","_handleDateNoLimitChange","isCheckedDateNoLimit","_handleTitleTaskChange","_handleDescTaskChange","data","_handleSelectChange","handleSubmitForm","FORM_DATA","_handleClick","changeActivePage","allUsers","inputDatesRef","React","createRef","textareaRef","elem","current","flatpickr","ClassicEditor","create","newEditor","model","on","getData","initEditor","destroy","log","action","ref","onInput","data-input","data-toggle","data-clear","checked","user_id","user_surname","user_name","user_patronymic","PageAddTask","PageTask","getTask","require","App","renderPageTasks","origin","search","_handleClickExit","_isAuthUser","_getFullName","_setLoggedIn","basename","render","exact","userInfo","PureComponent","hostname","ReactDOM","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56e05b03.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Container(props) {\r\n    return (\r\n        <div className=\"container\">{props.children}</div>\r\n    )\r\n}","import React from \"react\";\r\nimport Container from \"../container/container\";\r\nimport './footer.scss'\r\n\r\nexport default function Footer() {\r\n    return (<footer className=\"footer\">\r\n        <Container>\r\n            <p>Разработка Дмитриев Максим. &copy; 2019 г.</p>\r\n        </Container>\r\n    </footer>);\r\n}\r\n","import toastr from 'toastr';\r\n\r\ntoastr.options = {\r\n    closeButton: false,\r\n    debug: false,\r\n    newestOnTop: false,\r\n    progressBar: true,\r\n    positionClass: `toast-top-center`,\r\n    onclick: null,\r\n    showDuration: `300`,\r\n    hideDuration: `1000`,\r\n    extendedTimeOut: `1000`,\r\n    showEasing: `swing`,\r\n    hideEasing: `linear`,\r\n    showMethod: `fadeIn`,\r\n    hideMethod: `fadeOut`\r\n};\r\n/**\r\n * Сообщение для пользователя\r\n * @param {String} type (`info`, `success`, `warning`, `error`)\r\n * @param {String} message `text`\r\n * @param {String} title `text`\r\n * @param {Number} time\r\n */\r\nconst showMessage = (type, message, title = ``, options = { time: 5000, preventDuplicates: false }) => {\r\n    toastr.options.timeOut = options.time;\r\n    toastr.options.preventDuplicates = options.preventDuplicates;\r\n    if (title) {\r\n        toastr[type](message, title)\r\n    } else {\r\n        toastr[type](message)\r\n    }\r\n};\r\n/**\r\n * Типы сообщений для функции showMessage\r\n */\r\nconst TypeMessage = {\r\n    INFO: `info`,\r\n    SUCCESS: `success`,\r\n    WARNING: `warning`,\r\n    ERROR: `error`\r\n};\r\n\r\nexport { showMessage, TypeMessage }\r\n","/**\r\n * Функция для проверки длины строки, в промежутке -  >= && <=\r\n * @param str\r\n * @param minLengthStr\r\n * @param maxLengthStr\r\n * @returns {boolean|boolean}\r\n */\r\nexport const checkLengthMinMaxStr = (str, minLengthStr, maxLengthStr) => {\r\n    return (str.length >= minLengthStr) && (str.length <= maxLengthStr);\r\n};\r\n/**\r\n * Истекла ли задача\r\n * @param dateTask - дата задачи.\r\n * @returns {boolean}\r\n */\r\nexport const hasDateExpired = (dateTask) => {\r\n    const today = new Date().getTime();\r\n    const dateEnd = new Date(reverseDate(dateTask)).getTime();\r\n    \r\n    return dateEnd < today;\r\n};\r\n/**\r\n * Получение Cookie по имени\r\n * @param name - имя Cookie\r\n * @returns {any}\r\n */\r\nexport const getCookie = (name) => {\r\n    let matches = document.cookie.match(new RegExp(\r\n        // eslint-disable-next-line no-useless-escape\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n};\r\n/**\r\n *  Устанавливает куки с именем name и значением value c опциями.\r\n * @param {String} name \r\n * @param {String} value\r\n * @param {Object} options \r\n */\r\nfunction setCookie(name, value, options = {}) {\r\n    options = {\r\n        path: '/',\r\n        ...options\r\n    };\r\n\r\n    if (options.expires instanceof Date) {\r\n        options.expires = options.expires.toUTCString();\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\r\n    for (let optionKey in options) {\r\n        updatedCookie += \"; \" + optionKey;\r\n        let optionValue = options[optionKey];\r\n        if (optionValue !== true) {\r\n            updatedCookie += \"=\" + optionValue;\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie;\r\n}\r\n/**\r\n * Уддаление Cookie по её имени.\r\n * @param {String} name \r\n */\r\nexport const deleteCookie = (name) => {\r\n    setCookie(name, \"\", {\r\n        'max-age': -1\r\n    })\r\n}\r\n/**\r\n * Переворачивает дату с сервера для js\r\n * @param {String} date \r\n */\r\nexport const reverseDate = (date) => {\r\n    return date.split('.').reverse().join('-');\r\n}\r\n/**\r\n * Возврашает заголовок для задач в зависимомти от активного скрина.\r\n * @param {String} url\r\n */\r\nexport const getActiveTitleTasks = (url, textSearch=\"\") => {\r\n    switch (url) {\r\n        case \"/my-tasks-done\":\r\n            return \"Мои выполненые задачи.\";\r\n        case \"/designated-tasks\":\r\n            return \"Я назначил задачи.\";\r\n        case \"/designated-tasks-done\":\r\n            return \"Выполненные задачи другими.\";\r\n        case \"/search\":\r\n            return `Результаты поиска по запросу - \"${textSearch}\"`;\r\n        default:\r\n            return \"Мои задачи.\";\r\n    }\r\n}\r\n/**\r\n * Удаление задачи. Для страниц с задачами.\r\n * @param {Object} tasks \r\n * @param {Number} idTask \r\n */\r\nexport const deleteTaskFromArrTasks = (tasks, idTask) => {\r\n    let copyTasks = [...tasks];\r\n    const indexTask = copyTasks.findIndex((task) => Number(task.task_id) === Number(idTask));\r\n    if (indexTask !== -1) {\r\n        // copyTasks[indexTask][\"task_status\"] = \"1\";\r\n        copyTasks.splice(indexTask, 1);\r\n    }\r\n    \r\n    return copyTasks;\r\n}\r\n/**\r\n * Изменение статуса задаи для страницы задач.\r\n * @param {Object} tasks\r\n * @param {Number} idTask\r\n */\r\nexport const changeStatusTask = (task) => {\r\n    return Object.assign({}, task, { task_status: \"1\" });\r\n}\r\n/**\r\n * Полуение массива активных(изменяемых в зависимости от типа адреса) ссылок для меню.\r\n * @param {String} url \r\n */\r\nexport const getActiveMenuLinks = (url) => {\r\n    switch (url) {\r\n        case \"/\":\r\n            return [\r\n                { textLink: \"Выполненые задачи мною\", href: \"/my-tasks-done\" },\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n        case \"/my-tasks-done\":\r\n            return [\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n        case \"/designated-tasks\":\r\n            return [\r\n                { textLink: \"Выполненые задачи другими\", href: \"/designated-tasks-done\" },\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n            ]\r\n        case \"/designated-tasks-done\":\r\n            return [\r\n                { textLink: \"Выполненые задачи другими\", href: \"/designated-tasks-done\" },\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n            ]\r\n        case \"/search\":\r\n            return [\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n        default:\r\n            return [\r\n                { textLink: \"Мои задачи\", href: \"/\" },\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n    };\r\n}\r\n/**\r\n * Декадирование параметра поиска \r\n * @param {String} urlOrigin \r\n */\r\nexport const decodeParamsSearchUrl = (urlOrigin) => {\r\n    if (!urlOrigin) {\r\n        return '';\r\n    }\r\n    const url = new URL(urlOrigin);\r\n    if (url.searchParams.has('q')) {\r\n        const searchTextEncode = url.searchParams.get('q');\r\n        const searchTextDecode = decodeURIComponent(searchTextEncode);\r\n\r\n        return searchTextDecode;\r\n    }\r\n}","import flatpickr from 'flatpickr';\r\nimport { Russian } from 'flatpickr/dist/l10n/ru';\r\n\r\nconst CONFIG_FLATPICKR = {\r\n  locale: Russian,\r\n  defaultDate: `today`,\r\n  mode: `range`,\r\n  dateFormat: `d.m.Y`,\r\n  minDate: `today`,\r\n  weekNumbers: true,\r\n  wrap: true\r\n};\r\nlet fp;\r\n\r\n/**\r\n * Иницилизация flatpickr\r\n * @param elem\r\n */\r\nexport const initFlatpickr = (elem) => {\r\n  fp = flatpickr(elem, CONFIG_FLATPICKR);\r\n  fp.setDate(+new Date(), true, CONFIG_FLATPICKR.dateFormat);\r\n};\r\n/**\r\n * Размонтирование flatpickr\r\n */\r\nexport const destroyFlatpickr = () => {\r\n  fp.destroy();\r\n}\r\n/**\r\n * Очишает данные в flatpickr и устанавливает текушую дату\r\n */\r\nexport const clearDataFlatpickr = () => {\r\n  fp.clear();\r\n  fp.setDate(+new Date(), true, CONFIG_FLATPICKR.dateFormat);\r\n};\r\n","import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport '@ckeditor/ckeditor5-build-classic/build/translations/ru';\r\n// import { showMessage, TypeMessage } from './show-user-message';\r\n\r\nconst CONFIG = {\r\n  removePlugins: ['ImageUpload'],\r\n  toolbar: ['Heading', 'bold', 'italic', '|', 'Link', 'bulletedList', 'numberedList', 'blockQuote', 'MediaEmbed', 'Undo', 'Redo'],\r\n  language: 'ru',\r\n  mediaEmbed: {\r\n    previewsInData: true\r\n  }\r\n};\r\nlet editor;\r\n/**\r\n * Инициализация ckeditor5\r\n * @param elem\r\n * @param fn - функция получения данных из редактора.\r\n */\r\nexport const initEditor = (elem, fn) => {\r\n  // const MAX_CHARACTERS = 1000 || TEXTAREA.maxLength;\r\n\r\n  ClassicEditor.create(elem, CONFIG)\r\n    .then(newEditor => {\r\n      editor = newEditor;\r\n    editor.model.document.on('change:data', () => {\r\n        const data = editor.getData();\r\n        fn(data);\r\n    });\r\n      // return true\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n\r\n};\r\n/**\r\n * Размонтирование Редактора\r\n */\r\nexport const destroyEditor = () => {\r\n  editor.destroy()\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n}\r\n/**\r\n * Очишает введеные данные в ckeditor5\r\n */\r\nexport const clearDataEditor = () => {\r\n  editor.setData('')\r\n};\r\n","/**\r\n * Получение моих задач\r\n */\r\nexport const fetchRequest = async (\r\n  link,\r\n  params = {\r\n    method: 'GET',\r\n    cache: 'no-store'\r\n  }\r\n  ) => {\r\n\r\n  const response = await fetch(`/ajax/${link}`, params);\r\n\r\n  return await response.json();\r\n};\r\n/**\r\n * Получение моих задач\r\n */\r\nexport const getMyTasks = () => fetchRequest('get-my-tasks.php?my-tasks=ajax');\r\n/**\r\n * Получение моих выполненых задач\r\n */\r\nexport const getMyTasksDone = () => fetchRequest('get-my-tasks-done.php?my-tasks-done=ajax');\r\n/**\r\n * Получение задач поставленных мною\r\n */\r\nexport const getDesignatedTasks = () => fetchRequest('get-designated-tasks.php?get-designated-task=ajax');\r\n/**\r\n * Выполненные задачи другими\r\n */\r\nexport const getDesignatedTasksDone = () => fetchRequest('get-designated-tasks-done.php?get-designated-task-done=ajax');\r\n/**\r\n * Получение всех ользователей\r\n */\r\nexport const getAllUsers = () => fetchRequest('get-all-users.php?all-users=ajax');\r\n/**\r\n * Выполнение задачи\r\n */\r\nexport const executeTask = (idTask) => fetchRequest(`execute-task.php?execute-task=ajax&action=execute&id=${idTask}`);\r\n/**\r\n * Добавление заддачи\r\n * @param {Object} formData \r\n */\r\nexport const addTask = (formData) => fetchRequest(\r\n  `add-task.php`,\r\n  {\r\n    method: 'POST',\r\n    body: formData\r\n  }\r\n  );\r\n/**\r\n * Регистрация пользователя на сайте.\r\n * @param {Object} formData\r\n */\r\nexport const signUpUser = (formData) => fetchRequest(\r\n  `signup.php`,\r\n  {\r\n    method: 'POST',\r\n    body: formData\r\n  }\r\n  );\r\n/**\r\n * Авторизация пользователя на сайте.\r\n * @param {Object} formData\r\n */\r\nexport const signInUser = (formData) => fetchRequest(\r\n  `signin.php`,\r\n  {\r\n    method: 'POST',\r\n    body: formData\r\n  }\r\n  );\r\n/**\r\n * Выход с сайта.\r\n */\r\nexport const logOut = () => fetchRequest(`logout.php?logout=ajax&action=exit`);\r\n/**\r\n * Поиск задачи\r\n * @param {String} text \r\n */\r\nexport const getResultSearchText = (text) => fetchRequest(`get-result-search.php?search-field=${text}`);\r\n/**\r\n * Получение задаччи по её ID\r\n * @param {Number} idTask \r\n */\r\nexport const getTask = (idTask) => fetchRequest(`get-task.php?task=ajax&id=${idTask}`);","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchByTasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            textSearch: props.textSearch || '',\r\n            valid: false\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this._handleChangeTextSearch = this._handleChangeTextSearch.bind(this);\r\n        this._handleSubmitFormSearch = this._handleSubmitFormSearch.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                onSubmit={this._handleSubmitFormSearch}\r\n                className=\"form form_search\" method=\"get\">\r\n                <h3 className=\"form__title visually-hidden\">Поиск по задачам.</h3>\r\n                <div className=\"form__row form__row_search\">\r\n                    <input className=\"form__input form__input_search\" type=\"search\" name=\"search-field\" placeholder=\"Поиск по задачам\"\r\n                        value={this.state.textSearch}\r\n                        onChange={this._handleChangeTextSearch}\r\n                    />\r\n                    <button \r\n                        disabled={!this.state.valid}\r\n                        className=\"form__button submit\" \r\n                        type=\"submit\">Найти</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _handleChangeTextSearch(evt) {\r\n        const value = evt.target.value;\r\n        this.setState({\r\n            textSearch: value,\r\n            valid: Boolean(value.trim())\r\n        })\r\n    }\r\n\r\n    _handleSubmitFormSearch(evt) {\r\n        evt.preventDefault();\r\n        this.props.history.push(`/search?q=${encodeURIComponent(this.state.textSearch.trim())}`)\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchByTasks);\r\n","import React from \"react\";\r\nimport \"./user-menu.scss\"\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getActiveMenuLinks } from \"../../helpers/helpers\";\r\n\r\nconst UserMenu = (props) => {\r\n    const {\r\n        user,\r\n        url,\r\n        handleClickExit\r\n    } = props;\r\n\r\n    return (\r\n        <nav className=\"user-menu\">\r\n            <span className=\"user-menu__user-name\">{`${user.surname} ${user.name} ${user.patronymic}`}</span>\r\n            {\r\n                getActiveMenuLinks(url).map((item, index) => {\r\n                    return (\r\n                        <Link\r\n                            className=\"user-menu__link link\"\r\n                            key={item.href + index}\r\n                            to={item.href}\r\n                            >{item.textLink}</Link>\r\n                    )\r\n                })\r\n            }\r\n            <Link \r\n                className=\"user-menu__link link\"\r\n                to=\"/add-task\"\r\n                >Поставить задачу</Link>\r\n            <a\r\n                className=\"user-menu__link user-menu__logout link\"\r\n                onClick={handleClickExit}\r\n                href=\"/logout\">Выйти</a>\r\n        </nav>\r\n    )\r\n};\r\n\r\nUserMenu.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    user: PropTypes.shape({\r\n        surname: PropTypes.string,\r\n        name: PropTypes.string,\r\n        patronymic: PropTypes.string\r\n    }).isRequired\r\n};\r\n\r\nexport default UserMenu","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./task.scss\";\r\nimport {hasDateExpired} from \"../../helpers/helpers\";\r\nimport dompurify from 'dompurify';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst sanitizer = dompurify.sanitize;\r\n\r\nconst renderDesc = (isShow, stringAndTags) => {\r\n    return isShow ? sanitizer(stringAndTags) : \"\";\r\n}\r\n\r\nconst getTaskContent = (props) => {\r\n    const {\r\n        isShowDesc,\r\n        isMore,\r\n        task,\r\n        userId\r\n    } = props;\r\n    const {\r\n        task_date_end,\r\n        task_title,\r\n        task_desc,\r\n        task_date_start,\r\n        task_status,\r\n        task_date_no_limit,\r\n        task_id,\r\n        author_name,\r\n        author_surname,\r\n        author_patronymic,\r\n        executor_id,\r\n        executor_name,\r\n        executor_patronymic,\r\n        executor_surname\r\n    } = task;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <h3 className=\"task__title\">{task_title}</h3>\r\n            <div \r\n                className=\"task__desc\"\r\n                dangerouslySetInnerHTML={{ __html: renderDesc(isShowDesc, task_desc) }}\r\n                >\r\n            </div>\r\n            <footer className=\"task__footer\">\r\n                <div className=\"task__date-start\">Начало задачи: {task_date_start}\r\n                </div>\r\n                <div className=\"task__date-end\">Закончить задачу до: {Number(task_date_no_limit) === 1 ? 'без даты окончания' : task_date_end}\r\n                </div>\r\n                <div className=\"task__status\">Статус: {Number(task_status) ? 'Выполнено.': 'В работе.'}\r\n                </div>\r\n                <div className=\"task__execute\">\r\n                    {\r\n                        !Number(task_status) && (userId === Number(executor_id))\r\n                            ? <button\r\n                                data-id-task={task_id}\r\n                                data-title={task_title}\r\n                                onClick={props.handleClickExecuteTask}\r\n                            >Выполнить задачу</button>\r\n                            : \"\"\r\n                    }\r\n                </div>\r\n                <div className=\"task__author\">Назначил: {author_surname} {author_name} {author_patronymic}\r\n                </div>\r\n                <div className=\"task__executor\">Испонитель: {executor_surname} {executor_name} {executor_patronymic}\r\n                </div>\r\n            </footer>\r\n            {\r\n                isMore ?\r\n                    <Link\r\n                        to={location => ({ ...location, pathname: `/task/${task_id}` })}\r\n                        className=\"link\"\r\n                        >Подробнее</Link>\r\n                    : ''\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const Task = (props) => {\r\n    const {\r\n        isShowDesc,\r\n        isTasks,\r\n        task\r\n    } = props;\r\n    const {\r\n        task_date_end,\r\n        task_date_no_limit\r\n    } = task;\r\n\r\n    if (isTasks) {\r\n            return (\r\n                getTaskContent(props)\r\n            )\r\n        }\r\n\r\n    const classTaskExpired = hasDateExpired(task_date_end) && Number(task_date_no_limit) === 0 ? `task_expired` : ``;\r\n\r\n    return (\r\n        <section className={`task ${classTaskExpired} ${isShowDesc ? `task_single` : ''}`}>\r\n            {getTaskContent(props)}\r\n        </section>\r\n    )\r\n}\r\n\r\nTask.propTypes = {\r\n    isShowDesc: PropTypes.bool.isRequired,\r\n    isMore: PropTypes.bool.isRequired,\r\n    task: PropTypes.shape({\r\n        task_date_end: PropTypes.string.isRequired,\r\n        task_title: PropTypes.string.isRequired,\r\n        task_date_start: PropTypes.string.isRequired,\r\n        task_status: PropTypes.string.isRequired,\r\n        author_name: PropTypes.string.isRequired,\r\n        executor_name: PropTypes.string.isRequired,\r\n        task_id: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    handleClickMore: PropTypes.func\r\n};\r\n\r\nexport default Task\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Task from \"../task/task\";\r\nimport { hasDateExpired } from \"../../helpers/helpers\";\r\nimport \"./tasks.scss\";\r\n\r\nconst option = {\r\n    isMore: true,\r\n    isShowDesc: false,\r\n    isTasks: true\r\n};\r\n\r\nexport const Tasks = (props) => {\r\n    const {\r\n        title,\r\n        tasks,\r\n        userId\r\n        } = props;\r\n\r\n    return (\r\n        <section className=\"tasks\">\r\n            <h2 className=\"tasks__title\">{title}</h2>\r\n            {\r\n                tasks.length ?\r\n                    <ul className=\"tasks__lists\">\r\n                        {\r\n                            tasks.map((task)=> {\r\n                                const classTaskItem = option.isTasks ? 'task' : '';\r\n                                const classTaskExpired = hasDateExpired(task.task_date_end) && Number(task.task_date_no_limit) === 0 ? `task_expired` : ``;\r\n\r\n                                return (\r\n                                    <li\r\n                                        className={`tasks__item ${classTaskItem} ${classTaskExpired}`}\r\n                                        key={task.task_id}>\r\n                                        <Task\r\n                                            isMore={option.isMore}\r\n                                            isShowDesc={option.isShowDesc}\r\n                                            isTasks={option.isTasks}\r\n                                            task={task}\r\n                                            userId={userId}\r\n                                            handleClickMore={props.handleClickMore}\r\n                                            handleClickExecuteTask={props.handleClickExecuteTask}\r\n                                        />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul> :\r\n                    <div>Нет никаких задач</div>\r\n            }\r\n        </section>\r\n    )\r\n};\r\n\r\nTasks.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    tasks: PropTypes.array.isRequired,\r\n    handleClickMore: PropTypes.func\r\n};\r\nexport default Tasks","import React from \"react\";\r\nimport \"./pagination.scss\"\r\n\r\nconst Pagination = (props) => {\r\n    const {pagesCount, pageCurrentPagination} = props;\r\n    const arr = new Array(pagesCount).fill(pagesCount);\r\n    const lastPage = arr.length;\r\n    const pagePrev = (pageCurrentPagination - 1) === 0 ? 1 : (pageCurrentPagination - 1);\r\n    const pageNext = (pageCurrentPagination + 1) > lastPage ? lastPage : (pageCurrentPagination + 1);\r\n\r\n    return (\r\n        <ul className=\"pagination-list\">\r\n            <li className=\"pagination-list__item pagination-list__item_prev\">\r\n                {\r\n                    pagePrev ===  pageCurrentPagination?\r\n                        <a className=\"pagination-list__link\"\r\n                           onClick={(evt) => evt.preventDefault()}\r\n                           href=\"#prev\">&lt;</a>\r\n                        : <a className=\"pagination-list__link\"\r\n                             onClick={props.handleClickChangePagePagination}\r\n                             data-page-id-pag={pagePrev} href={\"page-\" + pagePrev}>&lt;</a>\r\n                }\r\n            </li>\r\n            {\r\n                arr.map((it, index) => (\r\n                    <li className={`pagination-list__item${pageCurrentPagination === (index + 1) ?\r\n                        \" pagination-list__item_active\" \r\n                        : \"\"}`}\r\n                        key={\"page-\" + index}>\r\n                        <a className=\"pagination-list__link\"\r\n                           onClick={props.handleClickChangePagePagination}\r\n                           data-page-id-pag={index + 1} href={\"page-\" + (index + 1)}>{index + 1}</a>\r\n                    </li>)\r\n                )\r\n            }\r\n            <li className=\"pagination-list__item pagination-list__item_next\">\r\n                {\r\n                    pageNext ===  pageCurrentPagination ?\r\n                        <a className=\"pagination-list__link\"\r\n                           onClick={(evt) => evt.preventDefault()}\r\n                           href=\"#next\">&gt;</a>\r\n                        : <a className=\"pagination-list__link\"\r\n                             onClick={props.handleClickChangePagePagination}\r\n                             data-page-id-pag={pageNext} href={\"page-\" + pageNext}>&gt;</a>\r\n                }\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default Pagination","import React from \"react\";\r\nimport \"./loading-data.scss\";\r\n\r\nconst LoadingData = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\">\r\n        <div className=\"text\">Загрузка данных</div>\r\n        <div className=\"dots\">\r\n          <div className=\"dot\"></div>\r\n          <div className=\"dot\"></div>\r\n          <div className=\"dot\"></div>\r\n          <div className=\"dot\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default LoadingData","import React, { Component } from \"react\";\r\nimport SearchByTasks from \"../components/search-by-tasks/search-by-tasks\";\r\nimport UserMenu from \"../components/user-menu/user-menu\";\r\nimport Tasks from \"../components/tasks/tasks\";\r\nimport Pagination from \"../components/pagination/pagination\";\r\nimport { getActiveTitleTasks, deleteTaskFromArrTasks, decodeParamsSearchUrl } from \"../helpers/helpers\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getMyTasks, getMyTasksDone, getDesignatedTasks, getDesignatedTasksDone, executeTask, getResultSearchText } from \"../data/data\";\r\nimport { TypeMessage, showMessage } from '../plugins/show-message';\r\nimport LoadingData from '../components/loading-data/loading-data';\r\n\r\nclass PageTasks extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.initialState = {\r\n            tasks: [],\r\n            itemsTasks: 9,\r\n            pagesCount: 0,\r\n            pageCurrentPagination: 1,\r\n            loading: true,\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this._handleClickExecuteTask = this._handleClickExecuteTask.bind(this); \r\n        this._handleClickChangePagePagination = this._handleClickChangePagePagination.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { url } = this.props;\r\n\r\n        if (url === '/search') {\r\n            this._getSearchData();\r\n        } else {\r\n            const dataFunc = this._getFuncData(url);\r\n            this._getData(dataFunc);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { url, urlOrigin } = this.props;\r\n\r\n        if ((url !== '/search') && (url !== prevProps.url)) {\r\n            const dataFunc = this._getFuncData(url);\r\n            this._getData(dataFunc);\r\n        }\r\n\r\n        if ((url === '/search') && (urlOrigin !== prevProps.urlOrigin)) {\r\n            this._getSearchData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n\r\n        if (!isLoggedIn) {\r\n            return (<Redirect to=\"/sing-in\" />)\r\n        }\r\n\r\n        const {\r\n            user,\r\n            handleClickExit,\r\n            url,\r\n            urlOrigin\r\n        } = this.props;\r\n\r\n        const { userId } = user;\r\n\r\n        const textSearch = decodeParamsSearchUrl(urlOrigin);\r\n\r\n        const {\r\n            tasks,\r\n            pageCurrentPagination,\r\n            itemsTasks,\r\n            pagesCount\r\n         } = this.state;\r\n        const visibleTasks = tasks.length ? tasks.slice((pageCurrentPagination - 1) * itemsTasks, pageCurrentPagination * itemsTasks) : tasks;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <UserMenu\r\n                    handleClickExit={handleClickExit}\r\n                    user={user}\r\n                    url={url}\r\n                />\r\n                {\r\n                    this.state.loading ?\r\n                        <LoadingData /> :\r\n                        <React.Fragment>\r\n                            <SearchByTasks\r\n                                textSearch={textSearch}\r\n                            />\r\n                            <Tasks\r\n                                tasks={visibleTasks}\r\n                                title={getActiveTitleTasks(url, textSearch)}\r\n                                userId={userId}\r\n                                handleClickExecuteTask={this._handleClickExecuteTask}\r\n                            />\r\n                            {\r\n                                tasks.length > itemsTasks ?\r\n                                    <Pagination\r\n                                        pagesCount={pagesCount}\r\n                                        pageCurrentPagination={pageCurrentPagination}\r\n                                        handleClickChangePagePagination={this._handleClickChangePagePagination}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    _getData(fn) {\r\n        this.setState({\r\n            loading: true,\r\n            tasks: this.initialState.tasks,\r\n            pageCurrentPagination: this.initialState.pageCurrentPagination\r\n        });\r\n\r\n        fn()\r\n            .then(tasks => {\r\n                if (tasks.msgsType === 'error') {\r\n                    this.setState({\r\n                        tasks: []\r\n                    })\r\n                    return true\r\n                }\r\n\r\n                const lengthTasks = tasks.length;\r\n\r\n                this.setState((state) => {\r\n                    const { itemsTasks } = state;\r\n\r\n                    return {\r\n                        tasks: tasks,\r\n                        pagesCount: Math.ceil((lengthTasks / itemsTasks))\r\n                    }\r\n                })\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    _getFuncData(url) {\r\n        switch (url) {\r\n            case \"/my-tasks-done\":\r\n                return getMyTasksDone\r\n            case \"/designated-tasks\":\r\n                return getDesignatedTasks\r\n            case \"/designated-tasks-done\":\r\n                return getDesignatedTasksDone\r\n            default:\r\n                return getMyTasks\r\n        }\r\n    }\r\n\r\n    _handleClickExecuteTask(evt) {\r\n        const idTask = evt.target.dataset.idTask;\r\n        const title = evt.target.dataset.title;\r\n\r\n        const isQuestion = window.confirm(`Вы хотите выполнить задачу - ${title}?`)\r\n\r\n        if (isQuestion) {\r\n            executeTask(idTask)\r\n                .then(result => {\r\n                    showMessage(result.msgsType, '', result.textMsgs);\r\n                    if (result.msgsType === 'success') {\r\n                        this.setState((state) => {\r\n\r\n                            return {\r\n                                tasks: deleteTaskFromArrTasks(state.tasks, idTask),\r\n                            }\r\n                        })\r\n\r\n                        return true\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                    showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n                });\r\n        }\r\n    }\r\n\r\n    _handleClickChangePagePagination(evt) {\r\n        evt.preventDefault();\r\n        this.setState({\r\n            pageCurrentPagination: +evt.target.dataset.pageIdPag\r\n        });\r\n    }\r\n\r\n    _getSearchData() {\r\n        const textSearch = decodeParamsSearchUrl(this.props.urlOrigin) || '';\r\n        getResultSearchText(textSearch)\r\n            .then(tasks => {\r\n                if (tasks.msgsType === 'warning') {\r\n                    this.setState({\r\n                        tasks: this.initialState.tasks,\r\n                        pageCurrentPagination: this.initialState.pageCurrentPagination\r\n                    })\r\n                    return true\r\n                }\r\n\r\n                const lengthTasks = tasks.length;\r\n\r\n                this.setState((state) => {\r\n                    const { itemsTasks } = state;\r\n\r\n                    return {\r\n                        tasks: tasks,\r\n                        pagesCount: Math.ceil((lengthTasks / itemsTasks))\r\n                    }\r\n                })\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n};\r\n\r\nexport default PageTasks","export const ConfMinAndMax = Object.freeze({\r\n        MIN_LENGTH_LOGIN: 2,\r\n        MAX_LENGTH_LOGIN: 20,\r\n        MIN_LENGTH_PASSWORD: 6,\r\n        MAX_LENGTH_PASSWORD: 20,\r\n        MIN_LENGTH_TEXT: 2,\r\n        MAX_LENGTH_TEXT: 20\r\n    });\r\nexport const ConfMinAndMaxAddTask = Object.freeze({\r\n        MIN_LENGTH_TEXT: 2,\r\n        MAX_LENGTH_TEXT_TITLE: 255,\r\n        MAX_LENGTH_TEXT_DESK: 255,\r\n    });\r\nexport const ConfTimes = Object.freeze({\r\n        REDIRECTION_SIGN_IN_TIME: 3000,\r\n        REDIRECTION_TASKS_TIME: 3000,\r\n    });\r\n","import React, {Component} from \"react\";\r\nimport \"./forms.scss\";\r\nimport {checkLengthMinMaxStr} from \"../../helpers/helpers\";\r\nimport {ConfMinAndMax} from \"../../vars/vars\";\r\nimport {getCookie} from \"../../helpers/helpers\";\r\nimport { signInUser } from \"../../data/data\";\r\nimport { TypeMessage, showMessage } from '../../plugins/show-message';\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass FormSingIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            login: \"\",\r\n            password: \"\",\r\n            validForm: false\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this._handleSubmitForm}\r\n                className=\"form form_center form_auth\"\r\n                method=\"post\">\r\n                <h3 className=\"form__title\">Авторизация</h3>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"login\">Ваш логин:</label>\r\n                    <input\r\n                        value={this.state.login}\r\n                        onChange={this._handleLoginChange}\r\n                        className=\"form__input input\"\r\n                        id=\"login\" type=\"text\" name=\"login\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_LOGIN}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_LOGIN}\r\n                        required=\"required\"/>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"password\">Пароль:</label>\r\n                    <input\r\n                        value={this.state.password}\r\n                        onChange={this._handlePasswordChange}\r\n                        className=\"form__input input\"\r\n                        id=\"password\" type=\"password\" name=\"password\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_PASSWORD}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_PASSWORD}\r\n                        required=\"required\"/>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <button\r\n                        className=\"form__button submit\"\r\n                        disabled={!this.state.validForm}\r\n                        type=\"submit\">Войти</button>\r\n                </div>\r\n                <div className=\"form__row form__row_text-center\">\r\n                    <Link \r\n                        to=\"/sing-up\"\r\n                        className=\"form__link-signup link\"\r\n                        >Зарегистрироваться</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _validateForm = (state) => {\r\n        const {login, password} = state;\r\n        const isValidLogin = checkLengthMinMaxStr(login, ConfMinAndMax.MIN_LENGTH_LOGIN, ConfMinAndMax.MAX_LENGTH_LOGIN);\r\n        const isValidPassword = checkLengthMinMaxStr(password, ConfMinAndMax.MIN_LENGTH_PASSWORD, ConfMinAndMax.MAX_LENGTH_PASSWORD);\r\n\r\n        return isValidLogin && isValidPassword;\r\n    };\r\n\r\n    _handleLoginChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            login: value,\r\n            validForm: this._validateForm(Object.assign({}, state, {login: value}))\r\n        }));\r\n    };\r\n\r\n    _handlePasswordChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            password: value,\r\n            validForm: this._validateForm(Object.assign({}, state, {password: value}))\r\n        }));\r\n    };\r\n\r\n    _handleSubmitForm = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        let formData = new FormData(evt.target);\r\n        formData.append('signin', 'ajax');\r\n        \r\n        signInUser(formData)\r\n            .then(result => {\r\n                showMessage(result.msgsType, '', result.textMsgs);\r\n                if (result.msgsType === 'success') {\r\n                    this.setState(this.initialState);\r\n\r\n                    if (getCookie(\"userInfo\") && getCookie(\"PHPSESSID\")) {\r\n                        this.props.setLoggedIn(true);\r\n                        this.props.getFullName();\r\n                        this.props.history.push('/');\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n            });\r\n\r\n    };\r\n}\r\nexport default withRouter(FormSingIn)","import React from \"react\";\r\nimport FormSingIn from \"../components/forms/form-sing-in\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PageSingIn = ({ \r\n        isLoggedIn, \r\n        getFullName,\r\n        setLoggedIn\r\n    }) => {\r\n    \r\n    if (isLoggedIn) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n\r\n    return (\r\n        <FormSingIn\r\n            getFullName={getFullName}\r\n            setLoggedIn={setLoggedIn}\r\n        />\r\n    )\r\n};\r\nexport default PageSingIn","import React, { Component } from \"react\";\r\nimport \"./forms.scss\"\r\nimport { checkLengthMinMaxStr } from \"../../helpers/helpers\";\r\nimport { ConfMinAndMax } from \"../../vars/vars\";\r\nimport { showMessage, TypeMessage } from \"../../plugins/show-message\";\r\nimport { signUpUser } from \"../../data/data\";\r\n\r\nimport { Link} from \"react-router-dom\";\r\n\r\nclass FormSingUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            login: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            name: \"\",\r\n            surname: \"\",\r\n            patronymic: \"\",\r\n            validForm: false\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <form\r\n                onSubmit={this._handleSubmitForm}\r\n                className=\"form form_center form_reg\"\r\n                method=\"post\">\r\n                <h3 className=\"form__title\">Регистрация нового пользователя\r\n                </h3>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"login\">Ваш логин:</label>\r\n                    <input\r\n                        value={this.state.login}\r\n                        onChange={this._handleLoginChange}\r\n                        className=\"form__input input\"\r\n                        id=\"login\" type=\"text\" name=\"login\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_LOGIN}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_LOGIN}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"password\">Пароль:</label>\r\n                    <input\r\n                        value={this.state.password}\r\n                        onChange={this._handlePasswordChange}\r\n                        className=\"form__input input\"\r\n                        id=\"password\" type=\"password\" name=\"password\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_PASSWORD}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_PASSWORD}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"password2\">Повторите пароль:</label>\r\n                    <input\r\n                        value={this.state.password2}\r\n                        onChange={this._handlePassword2Change}\r\n                        onBlur={this._onBlurInput}\r\n                        className=\"form__input input\"\r\n                        id=\"password2\" type=\"password\" name=\"password2\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_PASSWORD}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_PASSWORD}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"name\">Имя:</label>\r\n                    <input\r\n                        value={this.state.name}\r\n                        onChange={this._handleNameChange}\r\n                        className=\"form__input input\"\r\n                        id=\"name\" type=\"text\" name=\"name\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_TEXT}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_TEXT}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"surname\">Фамилия:</label>\r\n                    <input\r\n                        value={this.state.surname}\r\n                        onChange={this._handleSurnameChange}\r\n                        className=\"form__input input\"\r\n                        id=\"surname\" type=\"text\" name=\"surname\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_TEXT}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_TEXT}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"patronymic\">Отчество:</label>\r\n                    <input\r\n                        value={this.state.patronymic}\r\n                        onChange={this.handlePatronymicChange}\r\n                        className=\"form__input input\"\r\n                        id=\"patronymic\" type=\"text\" name=\"patronymic\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_TEXT}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_TEXT}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <button\r\n                        disabled={!this.state.validForm}\r\n                        className=\"form__button submit\"\r\n                        type=\"submit\">Зарегистрироваться</button>\r\n                </div>\r\n                <div className=\"form__row form__row_text-center\">\r\n                    <Link\r\n                        to=\"/sing-in\"\r\n                        className=\"form__link-signup link\"\r\n                    >Авторизоваться</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _validateForm = (state) => {\r\n        const { login, password, password2, name, surname, patronymic } = state;\r\n        const isValidLogin = checkLengthMinMaxStr(login, ConfMinAndMax.MIN_LENGTH_LOGIN, ConfMinAndMax.MAX_LENGTH_LOGIN);\r\n        const isValidPassword = checkLengthMinMaxStr(password, ConfMinAndMax.MIN_LENGTH_PASSWORD, ConfMinAndMax.MAX_LENGTH_PASSWORD);\r\n        const isValidPassword2 = checkLengthMinMaxStr(password2, ConfMinAndMax.MIN_LENGTH_PASSWORD, ConfMinAndMax.MAX_LENGTH_PASSWORD);\r\n        const isValidEquallyPassword = password === password2;\r\n        const isValidName = checkLengthMinMaxStr(name, ConfMinAndMax.MIN_LENGTH_TEXT, ConfMinAndMax.MAX_LENGTH_TEXT);\r\n        const isValidSurname = checkLengthMinMaxStr(surname, ConfMinAndMax.MIN_LENGTH_TEXT, ConfMinAndMax.MAX_LENGTH_TEXT);\r\n        const isValidPatronymic = checkLengthMinMaxStr(patronymic, ConfMinAndMax.MIN_LENGTH_TEXT, ConfMinAndMax.MAX_LENGTH_TEXT);\r\n\r\n        return isValidLogin && isValidPassword && isValidPassword2 && isValidEquallyPassword && isValidName && isValidSurname && isValidPatronymic;\r\n    };\r\n\r\n    _handleLoginChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            login: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { login: value }))\r\n        }));\r\n    };\r\n\r\n    _handlePasswordChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            password: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { password: value }))\r\n        }));\r\n    };\r\n\r\n    _handlePassword2Change = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            password2: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { password2: value }))\r\n        }));\r\n    };\r\n\r\n    _handleNameChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            name: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { name: value }))\r\n        }));\r\n    };\r\n\r\n    _handleSurnameChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            surname: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { surname: value }))\r\n        }));\r\n    };\r\n\r\n    handlePatronymicChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            patronymic: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { patronymic: value }))\r\n        }));\r\n    };\r\n\r\n    _handleSubmitForm = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        let formData = new FormData(evt.target);\r\n        formData.append('signup', 'ajax');\r\n\r\n        signUpUser(formData)\r\n            .then(result => {\r\n                showMessage(result.msgsType, '', result.textMsgs);\r\n                if (result.msgsType === 'success') {\r\n                    this.setState(this.initialState);\r\n\r\n                    return true\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n            });\r\n    };\r\n\r\n    _onBlurInput = () => {\r\n        const { password, password2 } = this.state;\r\n        if (password.length >= ConfMinAndMax.MIN_LENGTH_PASSWORD && password !== password2) {\r\n            showMessage(TypeMessage.WARNING, `В поле \"Повторите пароль\", пароль не совпадает с полем \"Пароль\"!`);\r\n        }\r\n    };\r\n}\r\nexport default FormSingUp","import React from \"react\";\r\nimport FormSingUp from \"../components/forms/form-sing-up\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PageSingUp = ({isLoggedIn}) => {\r\n    if (isLoggedIn) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n    \r\n    return (\r\n        <FormSingUp/>\r\n    )\r\n};\r\nexport default PageSingUp","import React, { Component } from \"react\";\r\nimport \"./forms.scss\";\r\n\r\nimport { initFlatpickr, destroyFlatpickr } from \"../../plugins/flatpickr\";\r\nimport { initEditor, destroyEditor } from \"../../plugins/editor\";\r\nimport { checkLengthMinMaxStr } from \"../../helpers/helpers\";\r\nimport { ConfMinAndMaxAddTask } from \"../../vars/vars\";\r\nimport { getAllUsers } from \"../../data/data\";\r\nimport { TypeMessage, showMessage } from '../../plugins/show-message';\r\nimport { addTask } from \"../../data/data\";\r\nimport { clearDataEditor } from \"../../plugins/editor\";\r\nimport { clearDataFlatpickr } from \"../../plugins/flatpickr\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass FormAddTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            selectedDates: \"\",\r\n            isCheckedDateNoLimit: false,\r\n            valueSelect: \"disabled\",\r\n            titleTask: \"\",\r\n            descTask: \"\",\r\n            validForm: false,\r\n            allUsers: []\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this.inputDatesRef = React.createRef();\r\n        this.textareaRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        initFlatpickr(this.inputDatesRef.current);\r\n        initEditor(this.textareaRef.current, this._handleDescTaskChange);\r\n        getAllUsers()\r\n            .then(allUsers => {\r\n                if (allUsers.msgsType === 'error') {\r\n                    this.setState({\r\n                        allUsers: []\r\n                    })\r\n                    return true\r\n                }\r\n\r\n                this.setState({\r\n                    allUsers: allUsers\r\n                })\r\n\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        destroyEditor();\r\n        destroyFlatpickr();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this.handleSubmitForm}\r\n                className=\"form form_task-add\"\r\n                action=\"\" method=\"post\">\r\n                <div className=\"form__row form__row_label-group-two\">\r\n                    <label htmlFor=\"date\">Дата начала и окончания задачи</label>\r\n                    <div\r\n                        ref={this.inputDatesRef}\r\n                        className=\"flatpickr\">\r\n                        <input\r\n                            className=\"form__date input\"\r\n                            onInput={this._handleDatesChange}\r\n                            id=\"date\" type=\"text\" name=\"date\"\r\n                            placeholder=\"выберите дату или даты\" data-input=\"data-input\" required=\"required\" />\r\n                        <button type=\"button\" title=\"Открыт/Закрыть календарь\" data-toggle=\"\">календарь</button>\r\n                        <button type=\"button\" title=\"Очистить календарь\" data-clear=\"\">очистить</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form__row\">\r\n                    <input\r\n                        className=\"form__checkbox\"\r\n                        onChange={this._handleDateNoLimitChange}\r\n                        checked={this.state.isCheckedDateNoLimit}\r\n                        type=\"checkbox\" name=\"date-no-limit\" id=\"date-no-limit\" />\r\n                    <label htmlFor=\"date-no-limit\">Без даты окончания (дата окончания выбранная выше, будет игнорирована)</label>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <span>Выберите исполнителя</span>\r\n                    <select\r\n                        value={this.state.valueSelect}\r\n                        onChange={this._handleSelectChange}\r\n                        className=\"form__select\" name=\"executor\" required=\"required\">\r\n                        <option value=\"disabled\" disabled=\"disabled\">Не выбрано</option>\r\n                        {\r\n                            this.state.allUsers.map(user => (\r\n                                <option\r\n                                    value={user.user_id}\r\n                                    key={user.user_id}\r\n                                >{user.user_surname} {user.user_name} {user.user_patronymic}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label>Загаловок задачи</label>\r\n                    <textarea\r\n                        value={this.state.titleTask}\r\n                        onChange={this._handleTitleTaskChange}\r\n                        className=\"form__title-add textarea\" type=\"date\" name=\"title\" maxLength=\"255\" placeholder=\"сделать ...\" required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label>Дополнительная информация по задаче</label>\r\n                    <textarea\r\n                        className=\"textarea\"\r\n                        ref={this.textareaRef}\r\n                        value={this.state.descTask}\r\n                        onChange={this._handleDescTaskChange}\r\n                        id=\"textarea-text\" name=\"text\" maxLength=\"1000\" placeholder=\"Обьяснение задачи ...\" required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_text-center\">\r\n                    <button\r\n                        disabled={!this.state.validForm}\r\n                        className=\"form__submit submit\"\r\n                        type=\"submit\">Добавить задачу</button>\r\n                    <Link\r\n                        className=\"form__link link\"\r\n                        to=\"/\"\r\n                    >К списку моих задач</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _validateForm = (state) => {\r\n        const { selectedDates, valueSelect, titleTask, descTask } = state;\r\n        const isValidValueSelect = valueSelect !== \"disabled\";\r\n        const isValidTitleTask = checkLengthMinMaxStr(titleTask, ConfMinAndMaxAddTask.MIN_LENGTH_TEXT, ConfMinAndMaxAddTask.MAX_LENGTH_TEXT_TITLE);\r\n        const isValidDescTask = checkLengthMinMaxStr(descTask, ConfMinAndMaxAddTask.MIN_LENGTH_TEXT, ConfMinAndMaxAddTask.MAX_LENGTH_TEXT_DESK);\r\n\r\n        return selectedDates && isValidValueSelect && isValidTitleTask && isValidDescTask;\r\n    };\r\n\r\n    _handleDatesChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            selectedDates: value,\r\n            validForm: this._validateForm(Object.assign(state, { selectedDates: value }))\r\n        }));\r\n    };\r\n\r\n    _handleDateNoLimitChange = () => {\r\n        this.setState((state) => ({\r\n            isCheckedDateNoLimit: !state.isCheckedDateNoLimit\r\n        }));\r\n    };\r\n\r\n    _handleTitleTaskChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            titleTask: value,\r\n            validForm: this._validateForm(Object.assign(state, { titleTask: value }))\r\n        }));\r\n    };\r\n\r\n    _handleDescTaskChange = (data) => {\r\n        this.setState((state) => ({\r\n            descTask: data,\r\n            validForm: this._validateForm(Object.assign(state, { descTask: data }))\r\n        }));\r\n    };\r\n\r\n    _handleSelectChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            valueSelect: value,\r\n            validForm: this._validateForm(Object.assign(state, { valueSelect: value }))\r\n        }));\r\n    };\r\n\r\n    handleSubmitForm = (evt) => {\r\n        evt.preventDefault();\r\n        let FORM_DATA = new FormData(evt.target);\r\n        FORM_DATA.append('add-task', 'ajax');\r\n\r\n        addTask(FORM_DATA)\r\n            .then(result => {\r\n                showMessage(result.msgsType, '', result.textMsgs);\r\n                if (result.msgsType === 'success') {\r\n                    this.setState({\r\n                        isCheckedDateNoLimit: false,\r\n                        valueSelect: \"disabled\",\r\n                        titleTask: \"\",\r\n                        validForm: false,\r\n                    })\r\n\r\n                    clearDataEditor();\r\n                    clearDataFlatpickr();\r\n\r\n                    return true\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n            });\r\n    };\r\n\r\n    _handleClick = (evt) => {\r\n        evt.preventDefault();\r\n        this.props.changeActivePage(\"screen-tasks\");\r\n    };\r\n}\r\n\r\nexport default FormAddTask","import React from \"react\";\r\nimport FormAddTask from \"../components/forms/form-add-task\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PageAddTask = (props) => {\r\n    const { isLoggedIn } = props;\r\n\r\n    if (!isLoggedIn) {\r\n        return (<Redirect to=\"/sing-in\" />)\r\n    }\r\n\r\n    return (\r\n        <FormAddTask />\r\n    )\r\n};\r\nexport default PageAddTask","import React, { Component } from \"react\";\r\nimport Task from \"../components/task/task\"\r\nimport UserMenu from \"../components/user-menu/user-menu\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoadingData from '../components/loading-data/loading-data';\r\nimport { getTask, executeTask } from \"../data/data\";\r\nimport { TypeMessage, showMessage } from '../plugins/show-message';\r\nimport { changeStatusTask } from \"../helpers/helpers\";\r\n\r\nconst option = {\r\n    isMore: false,\r\n    isShowDesc: true\r\n};\r\n\r\nclass PageTask extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.initialState = {\r\n            task: null,\r\n            loading: true\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this._handleClickExecuteTask = this._handleClickExecuteTask.bind(this); \r\n    }\r\n\r\n    componentDidMount() {\r\n        const idTask = this.props.idTask;\r\n        \r\n        getTask(idTask)\r\n            .then(task => {\r\n                if (task.msgsType === 'error') {\r\n                    this.setState({\r\n                        task: this.initialState.task\r\n                    })\r\n                    return true;\r\n                }\r\n                \r\n                this.setState({task});\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n\r\n        if (!isLoggedIn) {\r\n            return (<Redirect to=\"/sing-in\" />)\r\n        }\r\n\r\n        const {\r\n            user,\r\n            handleClickExit,\r\n            url,\r\n        } = this.props;\r\n\r\n        const {userId} = user;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <UserMenu\r\n                    handleClickExit={handleClickExit}\r\n                    user={user}\r\n                    url={url}\r\n                />\r\n                {\r\n                    this.state.loading ?\r\n                        <LoadingData /> :\r\n                        this.state.task ?\r\n                            <Task\r\n                                isMore={option.isMore}\r\n                                isShowDesc={option.isShowDesc}\r\n                                task={this.state.task}\r\n                                userId={userId}\r\n                                handleClickExecuteTask={this._handleClickExecuteTask}\r\n                            /> :\r\n                            <p>Такая задача не существует!</p>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    _handleClickExecuteTask(evt) {\r\n        const idTask = evt.target.dataset.idTask;\r\n        const title = evt.target.dataset.title;\r\n\r\n        const isQuestion = window.confirm(`Вы хотите выполнить задачу - ${title}?`)\r\n\r\n        if (isQuestion) {\r\n            executeTask(idTask)\r\n                .then(result => {\r\n                    showMessage(result.msgsType, '', result.textMsgs);\r\n                    if (result.msgsType === 'success') {\r\n                        this.setState((state) => (\r\n                            {\r\n                                task: changeStatusTask(state.task),\r\n                            }\r\n                        ))\r\n\r\n                        return true\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                    showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n                });\r\n        }\r\n    }\r\n};\r\n\r\nexport default PageTask\r\n","import React, {PureComponent} from 'react';\nimport Container from \"./components/container/container\";\nimport Footer from './components/footer/footer';\nimport { TypeMessage, showMessage } from './plugins/show-message';\nimport { getCookie, deleteCookie } from  \"./helpers/helpers\";\nimport { logOut } from \"./data/data\";\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PageTasks from './pages/page-tasks';\nimport PageSingIn from './pages/page-sign-in';\nimport PageSingUp from './pages/page-sign-up';\nimport PageAddTask from \"./pages/page-add-task\";\nimport PageTask from \"./pages/page-task\";\n\nimport 'normalize.css';\n\nrequire('./Common.scss');\n\nexport class App extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.initialState = {\n            user: {\n                name: '',\n                surname: '',\n                patronymic: '',\n                userId: null\n            },\n            textSearch: '',\n            isLoggedIn: Boolean(this._isAuthUser())\n        };\n\n        this.state = this.initialState;\n\n        this._getFullName = this._getFullName.bind(this);\n        this._setLoggedIn = this._setLoggedIn.bind(this);\n        this._handleClickExit = this._handleClickExit.bind(this);\n    }\n\n    componentDidMount() {\n        this._getFullName();\n    }\n\n    render() {\n        const { \n            isLoggedIn,\n            user\n         } = this.state;\n\n        return (\n            <Router basename=\"/react/\" >\n                <main className={`bg main${this.state.loading ? ' flex' : ''}`}>\n                    <Container>\n                        <Switch>\n                            <Route \n                                path=\"/\"\n                                render={this.renderPageTasks}\n                                exact />\n                            <Route \n                                path=\"/search\"\n                                render={this.renderPageTasks}\n                                />\n                            <Route \n                                path=\"/my-tasks-done\"\n                                render={this.renderPageTasks}\n                                 />\n                            <Route \n                                path=\"/designated-tasks\"\n                                render={this.renderPageTasks}\n                                 />\n                            <Route \n                                path=\"/designated-tasks-done\"\n                                render={this.renderPageTasks}\n                                 />\n                            <Route \n                                path=\"/sing-up\"\n                                render={()=>(\n                                    <PageSingUp \n                                        isLoggedIn={isLoggedIn}\n                                    />\n                                )} />\n                            <Route \n                                path=\"/sing-in\"\n                                render={() => (\n                                    <PageSingIn\n                                        isLoggedIn={isLoggedIn}\n                                        getFullName={this._getFullName}\n                                        setLoggedIn={this._setLoggedIn}\n                                    />\n                                )} />\n                            <Route \n                                path=\"/add-task\"\n                                render={()=>(\n                                    <PageAddTask \n                                        isLoggedIn={isLoggedIn}\n                                        />\n                                )}\n                                />\n                            <Route \n                                path=\"/task/:id\"\n                                render={({ match })=> {\n                                    const { id } = match.params;\n\n                                    return <PageTask\n                                        user={user}\n                                        url={match.url}\n                                        idTask={id}\n                                        handleClickExit={this._handleClickExit}\n                                        isLoggedIn={isLoggedIn}\n                                    />\n                                    }\n                                }\n                                />\n                            <Route render={()=>(<h1>Такой страницы нету!</h1>)} />\n                        </Switch>\n                    </Container>\n                </main>\n                <Footer />\n            </Router>\n        )\n    }\n\n    renderPageTasks = ({ location, match }) => {\n        return <PageTasks\n            isLoggedIn={this.state.isLoggedIn}\n            user={this.state.user}\n            url={match.url}\n            urlOrigin={`${window.location.origin}${location.search}`}\n            handleClickExit={this._handleClickExit}\n        />;\n    }\n\n    _isAuthUser() {\n        return getCookie(\"userInfo\") && getCookie(\"PHPSESSID\");\n    }\n\n    _getFullName() {\n        if (this._isAuthUser()) {\n            const userInfo = getCookie(\"userInfo\").split(\";\");\n            this.setState({\n                user: {\n                    name: userInfo[0],\n                    surname: userInfo[1],\n                    patronymic: userInfo[2],\n                    userId: Number(userInfo[3])\n                }\n            });\n        }\n    }\n\n    _setLoggedIn(value = false) {\n        this.setState({ isLoggedIn: value })\n    }\n\n    _handleClickExit(evt) {\n        evt.preventDefault();\n        const isQuestion = window.confirm(`Вы действительно хотите выйти?`);\n        if (isQuestion) {\n            logOut()\n                .then(response => {\n                    showMessage(response.msgsType, '', response.textMsgs);\n                    if (response.msgsType === 'success') {\n                        deleteCookie('PHPSESSID');\n                        deleteCookie('userInfo');\n                        this._setLoggedIn(false);\n                    }\n                    return true;\n                })\n                .catch(e => {\n                    console.error(e);\n                    showMessage(TypeMessage.ERROR, e, );\n                });\n        }\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('.root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}