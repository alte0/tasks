{"version":3,"sources":["reducers/user.js","helpers/helpers.js","reducers/task.js","reducers/users.js","reducers/tasks.js","reducers/index.js","components/container/container.js","components/footer/footer.js","actions/user.js","components/search-by-tasks/search-by-tasks.js","data/data.js","plugins/show-message.js","plugins/flatpickr.js","plugins/editor.js","components/user-menu/user-menu.js","components/task/task.js","components/tasks/tasks.js","components/pagination/pagination.js","components/loading-data/loading-data.js","pages/page-tasks.js","actions/tasks.js","vars/vars.js","components/forms/form-sing-in.js","pages/page-sign-in.js","components/forms/form-sing-up.js","pages/page-sign-up.js","components/forms/form-add-task.js","actions/users.js","pages/page-add-task.js","pages/page-task.js","actions/task.js","App.js","serviceWorker.js","index.js"],"names":["initialState","name","surname","patronymic","userId","reducerUser","state","action","type","payload","checkLengthMinMaxStr","str","minLengthStr","maxLengthStr","length","hasDateExpired","dateTask","today","Date","getTime","reverseDate","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","deleteCookie","value","options","path","expires","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","setCookie","date","split","reverse","join","getActiveTitleTasks","url","textSearch","changeStatusTask","task","Object","assign","task_status","checkLoggedUser","reducerTask","reducerUsers","reducerTasks","combineReducers","user","users","tasks","Container","props","className","children","Footer","getUserInfo","SearchByTasks","valid","_handleChangeTextSearch","bind","_handleSubmitFormSearch","onSubmit","this","method","placeholder","onChange","disabled","evt","target","setState","Boolean","trim","preventDefault","history","push","Component","withRouter","fetchRequest","link","a","async","params","cache","fetch","response","json","getMyTasks","getMyTasksDone","getDesignatedTasks","getDesignatedTasksDone","executeTask","idTask","addTask","formData","body","signUpUser","signInUser","toastr","closeButton","debug","newestOnTop","progressBar","positionClass","onclick","showDuration","hideDuration","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","fp","editor","showMessage","message","title","time","preventDuplicates","timeOut","TypeMessage","INFO","SUCCESS","WARNING","ERROR","connect","textLink","href","getActiveMenuLinks","map","item","index","key","to","onClick","window","confirm","then","msgsType","textMsgs","catch","e","console","error","sanitizer","dompurify","sanitize","getTaskContent","isShow","stringAndTags","isShowDesc","isMore","task_date_end","task_title","task_desc","task_date_start","task_date_no_limit","task_id","author_name","author_surname","author_patronymic","executor_id","executor_name","executor_patronymic","executor_surname","Fragment","dangerouslySetInnerHTML","__html","Number","data-id-task","data-title","handleClickExecuteTask","location","pathname","Task","isTasks","classTaskExpired","option","Tasks","classTaskItem","handleClickMore","Pagination","pagesCount","pageCurrentPagination","arr","Array","fill","lastPage","pagePrev","pageNext","handleClickChangePagePagination","data-page-id-pag","it","LoadingData","getTextInSearchParams","search","URLSearchParams","get","PageTasks","itemsTasks","loading","_handleClickExecuteTask","_handleClickChangePagePagination","_getSearchData","dataFunc","_getFuncData","_getData","nextProps","nextState","currUrl","nextUrl","textSearchCurr","textSearchNext","urlOrigin","URL","searchParams","has","searchTextEncode","decodeParamsSearchUrl","origin","visibleTasks","slice","fn","getTasksDispatch","lengthTasks","Math","ceil","finally","dataset","result","newTasks","copyTasks","indexTask","findIndex","splice","deleteTaskFromArrTasks","pageIdPag","text","dispatch","ConfMinAndMax","freeze","MIN_LENGTH_LOGIN","MAX_LENGTH_LOGIN","MIN_LENGTH_PASSWORD","MAX_LENGTH_PASSWORD","MIN_LENGTH_TEXT","MAX_LENGTH_TEXT","ConfMinAndMaxAddTask","MAX_LENGTH_TEXT_TITLE","MAX_LENGTH_TEXT_DESK","FormSingIn","REDIRECTION_SIGN_IN_TIME","REDIRECTION_TASKS_TIME","_validateForm","login","password","isValidLogin","isValidPassword","_handleLoginChange","validForm","_handlePasswordChange","_handleSubmitForm","FormData","append","userInfo","getUserInfoToProps","htmlFor","id","minLength","maxLength","required","PageSingIn","FormSingUp","password2","isValidPassword2","isValidEquallyPassword","isValidName","isValidSurname","isValidPatronymic","_handlePassword2Change","_handleNameChange","_handleSurnameChange","handlePatronymicChange","_onBlurInput","onBlur","PageSingUp","CONFIG_FLATPICKR","locale","Russian","defaultDate","mode","dateFormat","minDate","weekNumbers","wrap","clearDataFlatpickr","clear","setDate","CONFIG","removePlugins","toolbar","language","mediaEmbed","previewsInData","clearDataEditor","setData","FormAddTask","selectedDates","valueSelect","titleTask","descTask","isValidValueSelect","isValidTitleTask","isValidDescTask","_handleDatesChange","_handleDateNoLimitChange","isCheckedDateNoLimit","_handleTitleTaskChange","_handleDescTaskChange","data","_handleSelectChange","handleSubmitForm","FORM_DATA","inputDatesRef","React","createRef","textareaRef","elem","current","flatpickr","ClassicEditor","create","newEditor","model","on","getData","initEditor","getAllUsersDispatch","destroy","log","userIdCurrent","ref","onInput","data-input","data-toggle","data-clear","checked","user_id","user_surname","user_name","user_patronymic","PageAddTask","PageTask","getTask","fetchTaskDispatch","handleClickExit","executeTaskDispatch","App","getUserInfoDispatch","basename","exact","render","hostname","middlewareEnhancer","applyMiddleware","thunkMiddleware","composedEnhancers","compose","store","createStore","rootReducer","ReactDOM","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iZAAMA,EAAe,CACjBC,KAAM,GACNC,QAAS,GACTC,WAAY,GACZC,OAAQ,GAYGC,EATK,WAAoC,IAAnCC,EAAkC,uDAA1BN,EAAcO,EAAY,uCACnD,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,I,gBCLNI,EAAuB,SAACC,EAAKC,EAAcC,GACpD,OAAQF,EAAIG,QAAUF,GAAkBD,EAAIG,QAAUD,GAO7CE,EAAiB,SAACC,GAC3B,IAAMC,GAAQ,IAAIC,MAAOC,UAGzB,OAFgB,IAAID,KAAKE,EAAYJ,IAAWG,UAE/BF,GAORI,EAAY,SAACpB,GACtB,IAAIqB,EAAUC,SAASC,OAAOC,MAAM,IAAIC,OAEpC,WAAazB,EAAK0B,QAAQ,+BAAgC,QAAU,aAExE,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,GAkC/C,IAAMC,EAAe,SAAC7B,IA1B7B,SAAmBA,EAAM8B,GAAsB,IAAfC,EAAc,uDAAJ,IACtCA,EAAO,aACHC,KAAM,KACHD,IAGKE,mBAAmBhB,OAC3Bc,EAAQE,QAAUF,EAAQE,QAAQC,eAGtC,IAAIC,EAAgBC,mBAAmBpC,GAAQ,IAAMoC,mBAAmBN,GAExE,IAAK,IAAIO,KAAaN,EAAS,CAC3BI,GAAiB,KAAOE,EACxB,IAAIC,EAAcP,EAAQM,IACN,IAAhBC,IACAH,GAAiB,IAAMG,GAI/BhB,SAASC,OAASY,EAOlBI,CAAUvC,EAAM,GAAI,CAChB,WAAY,KAOPmB,EAAc,SAACqB,GACxB,OAAOA,EAAKC,MAAM,KAAKC,UAAUC,KAAK,MAO7BC,EAAsB,SAACC,GAAwB,IAAnBC,EAAkB,uDAAP,GAChD,OAAQD,GACJ,IAAK,iBACD,MAAO,wHACX,IAAK,oBACD,MAAO,gGACX,IAAK,yBACD,MAAO,sJACX,IAAK,UACD,MAAM,gKAAN,OAA0CC,EAA1C,KACJ,QACI,MAAO,6DAsBNC,EAAmB,SAACC,GAC7B,OAAOC,OAAOC,OAAO,GAAIF,EAAM,CAAEG,YAAa,OAyDrCC,EAAkB,kBAAOhC,EAAU,aAAeA,EAAU,cChK1DiC,EAXK,WAA4B,IAA3BhD,EAA0B,uDAAlB,KAAMC,EAAY,uCAC3C,OAAQA,EAAOC,MACX,IAAK,aACD,OAAOD,EAAOE,QAClB,IAAK,eACD,OAAOuC,EAAiBzC,EAAOE,SACnC,QACI,OAAOH,ICAJiD,EATM,WAA0B,IAAzBjD,EAAwB,uDAAhB,GAAIC,EAAY,uCAC1C,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICIJkD,EATM,WAA0B,IAAzBlD,EAAwB,uDAAhB,GAAIC,EAAY,uCAC1C,OAAQA,EAAOC,MACX,IAAK,YACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICGJmD,cAAgB,CAC3BC,OACAT,OACAU,QACAC,U,2CCVW,SAASC,EAAUC,GAC9B,OACI,yBAAKC,UAAU,aAAaD,EAAME,U,MCA3B,SAASC,IACpB,OAAQ,4BAAQF,UAAU,UACtB,kBAACF,EAAD,KACI,sM,mBCPCK,EAAc,SAACzD,GAAD,MAAc,CAAED,KAAM,gBAAiBC,Y,QCG5D0D,E,YACF,WAAYL,GAAQ,IAAD,8BACf,4CAAMA,KACD9D,aAAe,CAChB+C,WAAYe,EAAMf,YAAc,GAChCqB,OAAO,GAEX,EAAK9D,MAAQ,EAAKN,aAElB,EAAKqE,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBAC/B,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBAThB,E,sEAaf,OACI,0BACIE,SAAUC,KAAKF,wBACfR,UAAU,mBAAmBW,OAAO,OACpC,wBAAIX,UAAU,+BAAd,2FACA,yBAAKA,UAAU,8BACX,2BAAOA,UAAU,iCAAiCvD,KAAK,SAASP,KAAK,eAAe0E,YAAY,yFAC5F5C,MAAO0C,KAAKnE,MAAMyC,WAClB6B,SAAUH,KAAKJ,0BAEnB,4BACIQ,UAAWJ,KAAKnE,MAAM8D,MACtBL,UAAU,sBACVvD,KAAK,UAHT,sC,8CASQsE,GACpB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB0C,KAAKO,SAAS,CACVjC,WAAYhB,EACZqC,MAAOa,QAAQlD,EAAMmD,Y,8CAILJ,GACpBA,EAAIK,iBACJV,KAAKX,MAAMsB,QAAQC,KAAnB,oBAAqChD,mBAAmBoC,KAAKnE,MAAMyC,WAAWmC,c,GA3C1DI,aA+CbC,cAAWpB,G,yBC/CbqB,EAAe,SAC1BC,GAD0B,6BAAAC,EAAAC,OAAA,uDAE1BC,EAF0B,+BAEjB,CACPlB,OAAQ,MACRmB,MAAO,YAJiB,WAAAH,EAAA,MAQHI,MAAM,SAAD,OAAUL,GAAQG,IARpB,cAQpBG,EARoB,kBAAAL,EAAA,MAUbK,EAASC,QAVI,8EAefC,EAAa,kBAAMT,EAAa,mCAIhCU,EAAiB,kBAAMV,EAAa,6CAIpCW,EAAqB,kBAAMX,EAAa,sDAIxCY,EAAyB,kBAAMZ,EAAa,gEAQ5Ca,EAAc,SAACC,GAAD,OAAYd,EAAa,wDAAD,OAAyDc,KAK/FC,EAAU,SAACC,GAAD,OAAchB,EAAa,eAEhD,CACEd,OAAQ,OACR+B,KAAMD,KAOGE,EAAa,SAACF,GAAD,OAAchB,EAAa,aAEnD,CACEd,OAAQ,OACR+B,KAAMD,KAOGG,EAAa,SAACH,GAAD,OAAchB,EAAa,aAEnD,CACEd,OAAQ,OACR+B,KAAMD,K,iBCnEVI,IAAO5E,QAAU,CACb6E,aAAa,EACbC,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,cAAc,mBACdC,QAAS,KACTC,aAAa,MACbC,aAAa,OACbC,gBAAgB,OAChBC,WAAW,QACXC,WAAW,SACXC,WAAW,SACXC,WAAW,WASf,ICZIC,ECAAC,EFYEC,GAAc,SAACpH,EAAMqH,GAA6E,IAApEC,EAAmE,0DAAvD9F,EAAuD,uDAA7C,CAAE+F,KAAM,IAAMC,mBAAmB,GACvFpB,IAAO5E,QAAQiG,QAAUjG,EAAQ+F,KACjCnB,IAAO5E,QAAQgG,kBAAoBhG,EAAQgG,kBACvCF,EACAlB,IAAOpG,GAAMqH,EAASC,GAEtBlB,IAAOpG,GAAMqH,IAMfK,GAAc,CAChBC,KAAK,OACLC,QAAQ,UACRC,QAAQ,UACRC,MAAM,SG6BK/C,eACXgD,aAHoB,SAACjI,GAAD,MAAY,CAAEoD,KAAMpD,EAAMoD,QAG9C6E,EA7Da,SAAC,GAA2B,IAAzB7E,EAAwB,EAAxBA,KAAMZ,EAAkB,EAAlBA,IAAKsC,EAAa,EAAbA,QAuB3B,OACI,yBAAKrB,UAAU,aACX,0BAAMA,UAAU,wBAAhB,UAA2CL,EAAKxD,QAAhD,YAA2DwD,EAAKzD,KAAhE,YAAwEyD,EAAKvD,abwFvD,SAAC2C,GAC/B,OAAQA,GACJ,IAAK,IACD,MAAO,CACH,CAAE0F,SAAU,6HAA0BC,KAAM,kBAC5C,CAAED,SAAU,+FAAqBC,KAAM,sBAE/C,IAAK,iBACD,MAAO,CACH,CAAED,SAAU,0DAAcC,KAAM,KAChC,CAAED,SAAU,+FAAqBC,KAAM,sBAE/C,IAAK,oBAKL,IAAK,yBACD,MAAO,CACH,CAAED,SAAU,+IAA6BC,KAAM,0BAC/C,CAAED,SAAU,0DAAcC,KAAM,MAExC,IAAK,UAKL,QACI,MAAO,CACH,CAAED,SAAU,0DAAcC,KAAM,KAChC,CAAED,SAAU,+FAAqBC,KAAM,uBapHvCC,CAAmB5F,GAAK6F,KAAI,SAACC,EAAMC,GAC/B,OACI,kBAAC,IAAD,CACI9E,UAAU,uBACV+E,IAAKF,EAAKH,KAAOI,EACjBE,GAAIH,EAAKH,MACPG,EAAKJ,aAIvB,kBAAC,IAAD,CACIzE,UAAU,uBACVgF,GAAG,aAFP,+FAIA,uBACIhF,UAAU,yCACViF,QA1CY,SAAClE,GACrBA,EAAIK,iBAEe8D,OAAOC,QAAP,qKJ8DC1D,EAAa,sCI3DxB2D,MAAK,SAAApD,GAOF,OANA6B,GAAY7B,EAASqD,SAAU,GAAIrD,EAASsD,UAClB,YAAtBtD,EAASqD,WACTtH,EAAa,aACbA,EAAa,YACbsD,EAAQC,KAAK,cAEV,KAEViE,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,OA0BnCd,KAAK,YAHT,uC,iBC3CNiB,G,QAAYC,EAAUC,SAMtBC,GAAiB,SAAC/F,GAAW,IAJfgG,EAAQC,EAMpBC,EAIAlG,EAJAkG,WACAC,EAGAnG,EAHAmG,OACAhH,EAEAa,EAFAb,KACA7C,EACA0D,EADA1D,OAGA8J,EAcAjH,EAdAiH,cACAC,EAaAlH,EAbAkH,WACAC,EAYAnH,EAZAmH,UACAC,EAWApH,EAXAoH,gBACAjH,EAUAH,EAVAG,YACAkH,EASArH,EATAqH,mBACAC,EAQAtH,EARAsH,QACAC,EAOAvH,EAPAuH,YACAC,EAMAxH,EANAwH,eACAC,EAKAzH,EALAyH,kBACAC,EAIA1H,EAJA0H,YACAC,EAGA3H,EAHA2H,cACAC,EAEA5H,EAFA4H,oBACAC,EACA7H,EADA6H,iBAGJ,OACI,kBAAC,IAAMC,SAAP,KACI,wBAAIhH,UAAU,eAAeoG,GAC7B,yBACIpG,UAAU,aACViH,wBAAyB,CAAEC,QAjCvBnB,EAiC0CE,EAjClCD,EAiC8CK,EAhC/DN,EAASJ,GAAUK,GAAiB,OAmCnC,4BAAQhG,UAAU,gBACd,yBAAKA,UAAU,oBAAf,8EAAkDsG,GAElD,yBAAKtG,UAAU,kBAAf,6GAAqF,IAA/BmH,OAAOZ,GAA4B,qGAAuBJ,GAEhH,yBAAKnG,UAAU,gBAAf,yCAAuCmH,OAAO9H,GAAe,0DAAc,gDAE3E,yBAAKW,UAAU,iBAENmH,OAAO9H,IAAiBhD,IAAW8K,OAAOP,GAMrC,GALA,4BACEQ,eAAcZ,EACda,aAAYjB,EACZnB,QAASlF,EAAMuH,wBAHjB,gGAQd,yBAAKtH,UAAU,gBAAf,qDAAyC0G,EAAzC,IAA0DD,EAA1D,IAAwEE,GAExE,yBAAK3G,UAAU,kBAAf,iEAA6C+G,EAA7C,IAAgEF,EAAhE,IAAgFC,IAIhFZ,EACI,kBAAC,IAAD,CACIlB,GAAI,SAAAuC,GAAQ,sBAAUA,EAAV,CAAoBC,SAAS,SAAD,OAAWhB,MACnDxG,UAAU,QAFd,0DAIE,KA+CPyH,GAzCK,SAAC1H,GAAW,IAExBkG,EAGAlG,EAHAkG,WACAyB,EAEA3H,EAFA2H,QACAxI,EACAa,EADAb,KAGAiH,EAEAjH,EAFAiH,cACAI,EACArH,EADAqH,mBAGJ,GAAImB,EACI,OACI5B,GAAe/F,GAI3B,IAAM4H,EAAmB3K,EAAemJ,IAAiD,IAA/BgB,OAAOZ,GAAxC,kBAEzB,OACI,6BAASvG,UAAS,eAAU2H,EAAV,YAA8B1B,EAAU,cAAmB,KACxEH,GAAe/F,KC/FtB6H,I,OACM,GADNA,IAEU,EAFVA,IAGO,EAkDEC,GA/CM,SAAC9H,GAAW,IAEzBgE,EAGIhE,EAHJgE,MACAlE,EAEIE,EAFJF,MACAxD,EACI0D,EADJ1D,OAGJ,OACI,6BAAS2D,UAAU,SACf,wBAAIA,UAAU,gBAAgB+D,GAE1BlE,EAAM9C,OACF,wBAAIiD,UAAU,gBAENH,EAAM+E,KAAI,SAAC1F,GACP,IAAM4I,EAAgBF,GAAiB,OAAS,GAC1CD,EAAmB3K,EAAekC,EAAKiH,gBAAsD,IAApCgB,OAAOjI,EAAKqH,oBAAlD,kBAEzB,OACI,wBACIvG,UAAS,sBAAiB8H,EAAjB,YAAkCH,GAC3C5C,IAAK7F,EAAKsH,SACV,kBAAC,GAAD,CACIN,OAAQ0B,GACR3B,WAAY2B,GACZF,QAASE,GACT1I,KAAMA,EACN7C,OAAQA,EACR0L,gBAAiBhI,EAAMgI,gBACvBT,uBAAwBvH,EAAMuH,8BAOtD,+HCELU,I,MA/CI,SAACjI,GAAW,IACpBkI,EAAqClI,EAArCkI,WAAYC,EAAyBnI,EAAzBmI,sBACbC,EAAM,IAAIC,MAAMH,GAAYI,KAAKJ,GACjCK,EAAWH,EAAIpL,OACfwL,EAAYL,EAAwB,IAAO,EAAI,EAAKA,EAAwB,EAC5EM,EAAYN,EAAwB,EAAKI,EAAWA,EAAYJ,EAAwB,EAE9F,OACI,wBAAIlI,UAAU,mBACV,wBAAIA,UAAU,oDAENuI,IAAcL,EACV,uBAAGlI,UAAU,wBACViF,QAAS,SAAClE,GAAD,OAASA,EAAIK,kBACtBsD,KAAK,SAFR,KAGE,uBAAG1E,UAAU,wBACViF,QAASlF,EAAM0I,gCACfC,mBAAkBH,EAAU7D,KAAM,QAAU6D,GAF/C,MAMVJ,EAAIvD,KAAI,SAAC+D,EAAI7D,GAAL,OACJ,wBAAI9E,UAAS,+BAA0BkI,IAA2BpD,EAAQ,EACtE,gCACE,IACFC,IAAK,QAAUD,GACf,uBAAG9E,UAAU,wBACViF,QAASlF,EAAM0I,gCACfC,mBAAkB5D,EAAQ,EAAGJ,KAAM,SAAWI,EAAQ,IAAKA,EAAQ,OAIlF,wBAAI9E,UAAU,oDAENwI,IAAcN,EACV,uBAAGlI,UAAU,wBACViF,QAAS,SAAClE,GAAD,OAASA,EAAIK,kBACtBsD,KAAK,SAFR,KAGE,uBAAG1E,UAAU,wBACViF,QAASlF,EAAM0I,gCACfC,mBAAkBF,EAAU9D,KAAM,QAAU8D,GAF/C,SCtBXI,I,MAhBK,WAClB,OACE,yBAAK5I,UAAU,oBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QAAf,yFACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aCEnB6I,GAAwB,SAACtB,GAAc,IACjCuB,EAAWvB,EAAXuB,OAER,OADqB,IAAIC,gBAAgBD,GACpBE,IAAI,MAGvBC,G,YACF,WAAYlJ,GAAO,IAAD,8BACd,4CAAMA,KACD9D,aAAe,CAChBiN,WAAY,EACZjB,WAAY,EACZC,sBAAuB,EACvBiB,SAAS,GAEb,EAAK5M,MAAQ,EAAKN,aAElB,EAAKmN,wBAA0B,EAAKA,wBAAwB7I,KAA7B,gBAC/B,EAAK8I,iCAAmC,EAAKA,iCAAiC9I,KAAtC,gBAX1B,E,iFAcG,IACTxB,EAAQ2B,KAAKX,MAAMrC,MAAnBqB,IAER,GAAY,YAARA,EAAmB,CACnB,IAAMC,EAAc6J,GAAsBnI,KAAKX,MAAMwH,UACrD7G,KAAK4I,eAAetK,OACjB,CACH,IAAMuK,EAAW7I,KAAK8I,aAAazK,GACnC2B,KAAK+I,SAASF,M,4CAKAG,EAAWC,GAAY,IAC5BC,EAAYlJ,KAAKX,MAAMrC,MAA5BqB,IACK8K,EAAYH,EAAUhM,MAA3BqB,IAIR,GAFkB6K,IAAYC,GAAyB,YAAZA,EAE7B,CACV,IAAMN,EAAW7I,KAAK8I,aAAaK,GAEnC,OADAnJ,KAAK+I,SAASF,IACP,EAGX,IAAMO,EAAkBjB,GAAsBnI,KAAKX,MAAMwH,UACnDwC,EAAkBlB,GAAsBa,EAAUnC,UAGxD,OAFkC,YAAZqC,GAAuC,YAAZC,IAE5BC,IAAmBC,GACpCrJ,KAAK4I,eAAeS,IACb,GAGHJ,EAAUR,UAAYzI,KAAKnE,MAAM4M,SAAaQ,EAAUzB,wBAA0BxH,KAAKnE,MAAM2L,wB,+BAIrG,IAAK5I,IACD,OAAQ,kBAAC,IAAD,CAAU0F,GAAG,aAFpB,MAUDtE,KAAKX,MAJLF,EANC,EAMDA,MACAF,EAPC,EAODA,KACAjC,EARC,EAQDA,MACA6J,EATC,EASDA,SAGIxI,EAAQrB,EAARqB,IAEA1C,EAAWsD,EAAXtD,OAGF2C,ElBuEuB,SAACgL,GAClC,IAAKA,EACD,MAAO,GAEX,IAAMjL,EAAM,IAAIkL,IAAID,GACpB,GAAIjL,EAAImL,aAAaC,IAAI,KAAM,CAC3B,IAAMC,EAAmBrL,EAAImL,aAAalB,IAAI,KAC9C,OAAOnL,mBAAmBuM,IkB9EPC,CAFH,GAAD,OAAInF,OAAOqC,SAAS+C,QAApB,OAA6B/C,EAASuB,SAfhD,EAuBApI,KAAKnE,MAHN2L,EApBC,EAoBDA,sBACAgB,EArBC,EAqBDA,WACAjB,EAtBC,EAsBDA,WAEEsC,EAAe1K,EAAM9C,OAAS8C,EAAM2K,OAAOtC,EAAwB,GAAKgB,EAAYhB,EAAwBgB,GAAcrJ,EAEhI,OACI,kBAAC,IAAMmH,SAAP,KACI,kBAAC,GAAD,CACIjI,IAAKA,IAGL2B,KAAKnE,MAAM4M,QACP,kBAAC,GAAD,MACA,kBAAC,IAAMnC,SAAP,KACI,kBAAC,EAAD,CACIhI,WAAYA,IAEhB,kBAAC,GAAD,CACIa,MAAO0K,EACPxG,MAAOjF,EAAoBC,EAAKC,GAChC3C,OAAQA,EACRiL,uBAAwB5G,KAAK0I,0BAG7BvJ,EAAM9C,OAASmM,EACX,kBAAC,GAAD,CACIjB,WAAYA,EACZC,sBAAuBA,EACvBO,gCAAiC/H,KAAK2I,mCAG1C,S,+BAQvBoB,GAAK,IAAD,OACT/J,KAAKO,SAAS,CACVkI,SAAS,EACTjB,sBAAuBxH,KAAKzE,aAAaiM,wBAG7CuC,IACKrF,MAAK,SAAAvF,GACF,GAAuB,UAAnBA,EAAMwF,SAEN,OADA,EAAKtF,MAAM2K,iBAAiB,KACrB,EAGX,EAAK3K,MAAM2K,iBAAiB7K,GAE5B,IAAM8K,EAAc9K,EAAM9C,OAE1B,EAAKkE,UAAS,SAAC1E,GAAW,IACd2M,EAAe3M,EAAf2M,WAER,MAAO,CACHjB,WAAY2C,KAAKC,KAAMF,EAAczB,UAIhD3D,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,wIAErCsF,SAAQ,WACL,EAAK7J,SAAS,CAAEkI,SAAS,S,mCAIxBpK,GACT,OAAQA,GACJ,IAAK,iBACD,OAAOoD,EACX,IAAK,oBACD,OAAOC,EACX,IAAK,yBACD,OAAOC,EACX,QACI,OAAOH,K,8CAIKnB,GAAM,IAAD,OACnBwB,EAASxB,EAAIC,OAAO+J,QAAQxI,OAC5BwB,EAAQhD,EAAIC,OAAO+J,QAAQhH,MAEdmB,OAAOC,QAAP,0JAA+CpB,EAA/C,OAGfzB,EAAYC,GACP6C,MAAK,SAAA4F,GAEF,GADAnH,GAAYmH,EAAO3F,SAAU,GAAI2F,EAAO1F,UAChB,YAApB0F,EAAO3F,SAAwB,CAC/B,IAAM4F,ElBzFQ,SAACpL,EAAO0C,GAC1C,IAAI2I,EAAS,YAAOrL,GACdsL,EAAYD,EAAUE,WAAU,SAAClM,GAAD,OAAUiI,OAAOjI,EAAKsH,WAAaW,OAAO5E,MAMhF,OALmB,IAAf4I,GAEAD,EAAUG,OAAOF,EAAW,GAGzBD,EkBiF8BI,CAAuB,EAAKvL,MAAMF,MAAO0C,GAE1D,EAAKxC,MAAM2K,iBAAiBO,OAGnC1F,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,qG,uDAKjBzE,GAC7BA,EAAIK,iBACJV,KAAKO,SAAS,CACViH,uBAAwBnH,EAAIC,OAAO+J,QAAQQ,c,qCAIpCvM,GAAa,ITjIIwM,ESiIL,QTjIKA,ESkIRxM,ETlIiByC,EAAa,sCAAD,OAAuC+J,KSmInFpG,MAAK,SAAAvF,GACF,GAAuB,YAAnBA,EAAMwF,SAKN,OAJA,EAAKtF,MAAM2K,iBAAiB,IAC5B,EAAKzJ,SAAS,CACViH,sBAAuB,EAAKjM,aAAaiM,yBAEtC,EAGX,EAAKnI,MAAM2K,iBAAiB7K,GAE5B,IAAM8K,EAAc9K,EAAM9C,OAE1B,EAAKkE,UAAS,SAAC1E,GAAW,IACd2M,EAAe3M,EAAf2M,WAER,MAAO,CACHjB,WAAY2C,KAAKC,KAAMF,EAAczB,UAIhD3D,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,wIAErCsF,SAAQ,WACL,EAAK7J,SAAS,CAAEkI,SAAS,W,GAzNjB5H,aA2OTiD,gBAbS,SAACjI,GAAD,MAAY,CAChCoD,KAAMpD,EAAMoD,KACZE,MAAOtD,EAAMsD,UAGU,SAAC4L,GACxB,MAAO,CACHf,iBAAkB,SAAC7K,GACf4L,EC1P0B,CAAEhP,KAAM,YAAaC,QD0P7BmD,QAKf2E,CAA6ChD,YAAWyH,KE/P1DyC,I,MAAgBvM,OAAOwM,OAAO,CACnCC,iBAAkB,EAClBC,iBAAkB,GAClBC,oBAAqB,EACrBC,oBAAqB,GACrBC,gBAAiB,EACjBC,gBAAiB,MAEZC,GAAuB/M,OAAOwM,OAAO,CAC1CK,gBAAiB,EACjBG,sBAAuB,IACvBC,qBAAsB,MCExBC,IDAmBlN,OAAOwM,OAAO,CAC/BW,yBAA0B,IAC1BC,uBAAwB,M,YCD5B,WAAYxM,GAAQ,IAAD,8BACf,4CAAMA,KAsDVyM,cAAgB,SAACjQ,GAAW,IACjBkQ,EAAmBlQ,EAAnBkQ,MAAOC,EAAYnQ,EAAZmQ,SACRC,EAAehQ,EAAqB8P,EAAOf,GAAcE,iBAAkBF,GAAcG,kBACzFe,EAAkBjQ,EAAqB+P,EAAUhB,GAAcI,oBAAqBJ,GAAcK,qBAExG,OAAOY,GAAgBC,GA5DR,EA+DnBC,mBAAqB,SAAC9L,GAClB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBkQ,MAAOzO,EACP8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAACkQ,MAAOzO,UAnEpD,EAuEnB+O,sBAAwB,SAAChM,GACrB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBmQ,SAAU1O,EACV8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAACmQ,SAAU1O,UA3EvD,EA+EnBgP,kBAAoB,SAACjM,GACjBA,EAAIK,iBAEJ,IAAIqB,EAAW,IAAIwK,SAASlM,EAAIC,QAChCyB,EAASyK,OAAO,SAAU,QAE1BtK,EAAWH,GACN2C,MAAK,SAAA4F,GAEF,GADAnH,GAAYmH,EAAO3F,SAAU,GAAI2F,EAAO1F,UAChB,YAApB0F,EAAO3F,WACP,EAAKpE,SAAS,EAAKhF,cAEfqD,KAAmB,CACnB,IAAM6N,EAAW7P,EAAU,YAAYqB,MAAM,KACvCgB,EAAOQ,EAAY,CACrBjE,KAAMiR,EAAS,GACfhR,QAASgR,EAAS,GAClB/Q,WAAY+Q,EAAS,GACrB9Q,OAAQ8K,OAAOgG,EAAS,MAG5B,EAAKpN,MAAMqN,mBAAmBzN,GAC9B,EAAKI,MAAMsB,QAAQC,KAAK,SAInCiE,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,oGAzG1C,EAAKvJ,aAAe,CAChBwQ,MAAO,GACPC,SAAU,GACVI,WAAW,GAEf,EAAKvQ,MAAQ,EAAKN,aAPH,E,sEAWf,OACI,0BACIwE,SAAUC,KAAKsM,kBACfhN,UAAU,6BACVW,OAAO,QACP,wBAAIX,UAAU,eAAd,sEACA,yBAAKA,UAAU,sCACX,2BAAOqN,QAAQ,SAAf,sDACA,2BACIrP,MAAO0C,KAAKnE,MAAMkQ,MAClB5L,SAAUH,KAAKmM,mBACf7M,UAAU,oBACVsN,GAAG,QAAQ7Q,KAAK,OAAOP,KAAK,QAC5BqR,UAAW7B,GAAcE,iBACzB4B,UAAW9B,GAAcG,iBACzB4B,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,2BAAOqN,QAAQ,YAAf,yCACA,2BACIrP,MAAO0C,KAAKnE,MAAMmQ,SAClB7L,SAAUH,KAAKqM,sBACf/M,UAAU,oBACVsN,GAAG,WAAW7Q,KAAK,WAAWP,KAAK,WACnCqR,UAAW7B,GAAcI,oBACzB0B,UAAW9B,GAAcK,oBACzB0B,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,4BACIA,UAAU,sBACVc,UAAWJ,KAAKnE,MAAMuQ,UACtBrQ,KAAK,UAHT,mCAKJ,yBAAKuD,UAAU,mCACX,kBAAC,IAAD,CACIgF,GAAG,WACHhF,UAAU,0BAFd,sH,GA/CKuB,cAuHVC,eACXgD,YAAQ,MAPe,SAACiH,GACxB,MAAO,CACH2B,mBAAoB,SAACzN,GAAD,OAAW8L,EAAS9L,OAK5C6E,CAAkC6H,KCrHvBqB,GAVI,WAEf,OAAIpO,IACQ,kBAAC,IAAD,CAAU0F,GAAG,MAIrB,kBAAC,GAAD,OCgMO2I,G,YAnMX,WAAY5N,GAAQ,IAAD,8BACf,4CAAMA,KAyGVyM,cAAgB,SAACjQ,GAAW,IAChBkQ,EAA0DlQ,EAA1DkQ,MAAOC,EAAmDnQ,EAAnDmQ,SAAUkB,EAAyCrR,EAAzCqR,UAAW1R,EAA8BK,EAA9BL,KAAMC,EAAwBI,EAAxBJ,QAASC,EAAeG,EAAfH,WAC7CuQ,EAAehQ,EAAqB8P,EAAOf,GAAcE,iBAAkBF,GAAcG,kBACzFe,EAAkBjQ,EAAqB+P,EAAUhB,GAAcI,oBAAqBJ,GAAcK,qBAClG8B,EAAmBlR,EAAqBiR,EAAWlC,GAAcI,oBAAqBJ,GAAcK,qBACpG+B,EAAyBpB,IAAakB,EACtCG,EAAcpR,EAAqBT,EAAMwP,GAAcM,gBAAiBN,GAAcO,iBACtF+B,EAAiBrR,EAAqBR,EAASuP,GAAcM,gBAAiBN,GAAcO,iBAC5FgC,EAAoBtR,EAAqBP,EAAYsP,GAAcM,gBAAiBN,GAAcO,iBAExG,OAAOU,GAAgBC,GAAmBiB,GAAoBC,GAA0BC,GAAeC,GAAkBC,GApH1G,EAuHnBpB,mBAAqB,SAAC9L,GAClB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBkQ,MAAOzO,EACP8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAAEkQ,MAAOzO,UA3HrD,EA+HnB+O,sBAAwB,SAAChM,GACrB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBmQ,SAAU1O,EACV8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAAEmQ,SAAU1O,UAnIxD,EAuInBkQ,uBAAyB,SAACnN,GACtB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBqR,UAAW5P,EACX8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAAEqR,UAAW5P,UA3IzD,EA+InBmQ,kBAAoB,SAACpN,GACjB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBL,KAAM8B,EACN8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAAEL,KAAM8B,UAnJpD,EAuJnBoQ,qBAAuB,SAACrN,GACpB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBJ,QAAS6B,EACT8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAAEJ,QAAS6B,UA3JvD,EA+JnBqQ,uBAAyB,SAACtN,GACtB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBH,WAAY4B,EACZ8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO,GAAI7C,EAAO,CAAEH,WAAY4B,UAnK1D,EAuKnBgP,kBAAoB,SAACjM,GACjBA,EAAIK,iBAEJ,IAAIqB,EAAW,IAAIwK,SAASlM,EAAIC,QAChCyB,EAASyK,OAAO,SAAU,QAE1BvK,EAAWF,GACN2C,MAAK,SAAA4F,GAEF,GADAnH,GAAYmH,EAAO3F,SAAU,GAAI2F,EAAO1F,UAChB,YAApB0F,EAAO3F,SAGP,OAFA,EAAKpE,SAAS,EAAKhF,eAEZ,KAGdsJ,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,oGAxL3B,EA4LnB8I,aAAe,WAAO,IAAD,EACe,EAAK/R,MAA7BmQ,EADS,EACTA,SAAUkB,EADD,EACCA,UACdlB,EAAS3P,QAAU2O,GAAcI,qBAAuBY,IAAakB,GACrE/J,GAAYM,GAAYG,QAAb,0TA7Lf,EAAKrI,aAAe,CAChBwQ,MAAO,GACPC,SAAU,GACVkB,UAAW,GACX1R,KAAM,GACNC,QAAS,GACTC,WAAY,GACZ0Q,WAAW,GAGf,EAAKvQ,MAAQ,EAAKN,aAZH,E,sEAgBf,OACI,0BACIwE,SAAUC,KAAKsM,kBACfhN,UAAU,4BACVW,OAAO,QACP,wBAAIX,UAAU,eAAd,oLAEA,yBAAKA,UAAU,sCACX,2BAAOqN,QAAQ,SAAf,sDACA,2BACIrP,MAAO0C,KAAKnE,MAAMkQ,MAClB5L,SAAUH,KAAKmM,mBACf7M,UAAU,oBACVsN,GAAG,QAAQ7Q,KAAK,OAAOP,KAAK,QAC5BqR,UAAW7B,GAAcE,iBACzB4B,UAAW9B,GAAcG,iBACzB4B,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,2BAAOqN,QAAQ,YAAf,yCACA,2BACIrP,MAAO0C,KAAKnE,MAAMmQ,SAClB7L,SAAUH,KAAKqM,sBACf/M,UAAU,oBACVsN,GAAG,WAAW7Q,KAAK,WAAWP,KAAK,WACnCqR,UAAW7B,GAAcI,oBACzB0B,UAAW9B,GAAcK,oBACzB0B,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,2BAAOqN,QAAQ,aAAf,gGACA,2BACIrP,MAAO0C,KAAKnE,MAAMqR,UAClB/M,SAAUH,KAAKwN,uBACfK,OAAQ7N,KAAK4N,aACbtO,UAAU,oBACVsN,GAAG,YAAY7Q,KAAK,WAAWP,KAAK,YACpCqR,UAAW7B,GAAcI,oBACzB0B,UAAW9B,GAAcK,oBACzB0B,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,2BAAOqN,QAAQ,QAAf,uBACA,2BACIrP,MAAO0C,KAAKnE,MAAML,KAClB2E,SAAUH,KAAKyN,kBACfnO,UAAU,oBACVsN,GAAG,OAAO7Q,KAAK,OAAOP,KAAK,OAC3BqR,UAAW7B,GAAcM,gBACzBwB,UAAW9B,GAAcO,gBACzBwB,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,2BAAOqN,QAAQ,WAAf,+CACA,2BACIrP,MAAO0C,KAAKnE,MAAMJ,QAClB0E,SAAUH,KAAK0N,qBACfpO,UAAU,oBACVsN,GAAG,UAAU7Q,KAAK,OAAOP,KAAK,UAC9BqR,UAAW7B,GAAcM,gBACzBwB,UAAW9B,GAAcO,gBACzBwB,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,2BAAOqN,QAAQ,cAAf,qDACA,2BACIrP,MAAO0C,KAAKnE,MAAMH,WAClByE,SAAUH,KAAK2N,uBACfrO,UAAU,oBACVsN,GAAG,aAAa7Q,KAAK,OAAOP,KAAK,aACjCqR,UAAW7B,GAAcM,gBACzBwB,UAAW9B,GAAcO,gBACzBwB,SAAS,cAEjB,yBAAKzN,UAAU,sCACX,4BACIc,UAAWJ,KAAKnE,MAAMuQ,UACtB9M,UAAU,sBACVvD,KAAK,UAHT,iHAKJ,yBAAKuD,UAAU,mCACX,kBAAC,IAAD,CACIgF,GAAG,WACHhF,UAAU,0BAFd,8F,GAlGKuB,aCMViN,GATI,WACf,OAAIlP,IACQ,kBAAC,IAAD,CAAU0F,GAAG,MAIrB,kBAAC,GAAD,O,oBbTFyJ,GAAmB,CACvBC,O,MAAQC,QACRC,YAAY,QACZC,KAAK,QACLC,WAAW,QACXC,QAAQ,QACRC,aAAa,EACbC,MAAM,GAqBKC,GAAqB,WAChCvL,EAAGwL,QACHxL,EAAGyL,SAAS,IAAIjS,MAAQ,EAAMsR,GAAiBK,a,oBC7B3CO,I,MAAS,CACbC,cAAe,CAAC,eAChBC,QAAS,CAAC,UAAW,OAAQ,SAAU,IAAK,OAAQ,eAAgB,eAAgB,aAAc,aAAc,OAAQ,QACxHC,SAAU,KACVC,WAAY,CACVC,gBAAgB,KAsCPC,GAAkB,WAC7B/L,EAAOgM,QAAQ,Ka9BXC,G,YACF,WAAY9P,GAAQ,IAAD,8BACf,4CAAMA,KAmHVyM,cAAgB,SAACjQ,GAAW,IAChBuT,EAAoDvT,EAApDuT,cAAeC,EAAqCxT,EAArCwT,YAAaC,EAAwBzT,EAAxByT,UAAWC,EAAa1T,EAAb0T,SACzCC,EAAqC,aAAhBH,EACrBI,EAAmBxT,EAAqBqT,EAAW9D,GAAqBF,gBAAiBE,GAAqBC,uBAC9GiE,EAAkBzT,EAAqBsT,EAAU/D,GAAqBF,gBAAiBE,GAAqBE,sBAElH,OAAO0D,GAAiBI,GAAsBC,GAAoBC,GA1HnD,EA6HnBC,mBAAqB,SAACtP,GAClB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBuT,cAAe9R,EACf8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO7C,EAAO,CAAEuT,cAAe9R,UAjIzD,EAqInBsS,yBAA2B,WACvB,EAAKrP,UAAS,SAAC1E,GAAD,MAAY,CACtBgU,sBAAuBhU,EAAMgU,0BAvIlB,EA2InBC,uBAAyB,SAACzP,GACtB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtByT,UAAWhS,EACX8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO7C,EAAO,CAAEyT,UAAWhS,UA/IrD,EAmJnByS,sBAAwB,SAACC,GACrB,EAAKzP,UAAS,SAAC1E,GAAD,MAAY,CACtB0T,SAAUS,EACV5D,UAAW,EAAKN,cAAcrN,OAAOC,OAAO7C,EAAO,CAAE0T,SAAUS,UAtJpD,EA0JnBC,oBAAsB,SAAC5P,GACnB,IAAM/C,EAAQ+C,EAAIC,OAAOhD,MACzB,EAAKiD,UAAS,SAAC1E,GAAD,MAAY,CACtBwT,YAAa/R,EACb8O,UAAW,EAAKN,cAAcrN,OAAOC,OAAO7C,EAAO,CAAEwT,YAAa/R,UA9JvD,EAkKnB4S,iBAAmB,SAAC7P,GAChBA,EAAIK,iBACJ,IAAIyP,EAAY,IAAI5D,SAASlM,EAAIC,QACjC6P,EAAU3D,OAAO,WAAY,QAE7B1K,EAAQqO,GACHzL,MAAK,SAAA4F,GACFnH,GAAYmH,EAAO3F,SAAU,GAAI2F,EAAO1F,UAChB,YAApB0F,EAAO3F,WACP,EAAKpE,SAAS,CACVsP,sBAAsB,EACtBR,YAAa,WACbC,UAAW,GACXlD,WAAW,IAGf6C,KACAT,SAGP3J,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,oGAtL1C,EAAKvJ,aAAe,CAChB6T,cAAe,GACfS,sBAAsB,EACtBR,YAAa,WACbC,UAAW,GACXC,SAAU,GACVnD,WAAW,GAEf,EAAKvQ,MAAQ,EAAKN,aAElB,EAAK6U,cAAgBC,IAAMC,YAC3B,EAAKC,YAAcF,IAAMC,YAbV,E,iFAgBE,IdjBKE,EciBN,OdjBMA,EckBRxQ,KAAKoQ,cAAcK,SdjBvCxN,EAAKyN,KAAUF,EAAMzC,KAClBW,SAAS,IAAIjS,MAAQ,EAAMsR,GAAiBK,YCFvB,SAACoC,EAAMzG,GAG/B4G,KAAcC,OAAOJ,EAAM7B,IACxBjK,MAAK,SAAAmM,IACJ3N,EAAS2N,GACJC,MAAMhU,SAASiU,GAAG,eAAe,WACpC,IAAMf,EAAO9M,EAAO8N,UACpBjH,EAAGiG,SAINnL,OAAM,SAAAG,GACLD,QAAQC,MAAMA,MaMZiM,CAAWjR,KAAKuQ,YAAYE,QAASzQ,KAAK+P,uBhBHjBhP,EAAa,oCgBKjC2D,MAAK,SAAAxF,GACqB,UAAnBA,EAAMyF,SAKV,EAAKtF,MAAM6R,oBAAoBhS,GAJ3B,EAAKG,MAAM6R,oBAAoB,OAMtCrM,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,0I,6CbVhD5B,EAAOiO,UACJtM,OAAM,SAAAG,GACLD,QAAQqM,IAAIpM,MDfhB/B,EAAGkO,Y,+BcgCS,IACQE,EAAkBrR,KAAKX,MAAMJ,KAArCtD,OAEN,OACI,0BACIoE,SAAUC,KAAKkQ,iBACf5Q,UAAU,qBACVxD,OAAO,GAAGmE,OAAO,QACjB,yBAAKX,UAAU,uCACX,2BAAOqN,QAAQ,QAAf,oKACA,yBACI2E,IAAKtR,KAAKoQ,cACV9Q,UAAU,aACV,2BACIA,UAAU,mBACViS,QAASvR,KAAK2P,mBACd/C,GAAG,OAAO7Q,KAAK,OAAOP,KAAK,OAC3B0E,YAAY,wHAAyBsR,aAAW,aAAazE,SAAS,aAC1E,4BAAQhR,KAAK,SAASsH,MAAM,yIAA2BoO,cAAY,IAAnE,0DACA,4BAAQ1V,KAAK,SAASsH,MAAM,0GAAqBqO,aAAW,IAA5D,sDAGR,yBAAKpS,UAAU,aACX,2BACIA,UAAU,iBACVa,SAAUH,KAAK4P,yBACf+B,QAAS3R,KAAKnE,MAAMgU,qBACpB9T,KAAK,WAAWP,KAAK,gBAAgBoR,GAAG,kBAC5C,2BAAOD,QAAQ,iBAAf,kXAEJ,yBAAKrN,UAAU,sCACX,qJACA,4BACIhC,MAAO0C,KAAKnE,MAAMwT,YAClBlP,SAAUH,KAAKiQ,oBACf3Q,UAAU,eAAe9D,KAAK,WAAWuR,SAAS,YAClD,4BAAQzP,MAAM,WAAW8C,SAAS,YAAlC,2DAEIJ,KAAKX,MAAMH,MAAMgF,KAAI,SAAAjF,GAAI,OACrB,4BACI3B,MAAO2B,EAAK2S,QACZvN,IAAKpF,EAAK2S,SAFd,IAGIP,IAAkB5K,OAAOxH,EAAK2S,SAAW,SAAzC,UAAkD3S,EAAK4S,aAAvD,YAAuE5S,EAAK6S,UAA5E,YAAyF7S,EAAK8S,iBAHlG,UAQhB,yBAAKzS,UAAU,sCACX,8HACA,8BACIhC,MAAO0C,KAAKnE,MAAMyT,UAClBnP,SAAUH,KAAK8P,uBACfxQ,UAAU,2BAA2B9D,KAAK,QAAQsR,UAAU,MAAM5M,YAAY,iDAAc6M,SAAS,cAE7G,yBAAKzN,UAAU,sCACX,sOACA,8BACIA,UAAU,WACVgS,IAAKtR,KAAKuQ,YACVjT,MAAO0C,KAAKnE,MAAM0T,SAClBpP,SAAUH,KAAK+P,sBACfnD,GAAG,gBAAgBpR,KAAK,OAAOsR,UAAU,OAAO5M,YAAY,wGAAwB6M,SAAS,cAErG,yBAAKzN,UAAU,mCACX,4BACIc,UAAWJ,KAAKnE,MAAMuQ,UACtB9M,UAAU,sBACVvD,KAAK,UAHT,yFAIA,kBAAC,IAAD,CACIuD,UAAU,kBACVgF,GAAG,KAFP,6G,GA5GMzD,aA2MXiD,gBAbS,SAACjI,GAAD,MAAY,CAChCoD,KAAMpD,EAAMoD,KACZC,MAAOrD,EAAMqD,UAGU,SAAC6L,GACxB,MAAO,CACHmG,oBAAqB,SAAChS,GAClB6L,ECxN0B,CAAEhP,KAAM,gBAAiBC,QDwNjCkD,QAKf4E,CAA6CqL,IE7M7C6C,GAVK,WAEhB,OAAKpT,IAKD,kBAAC,GAAD,MAJQ,kBAAC,IAAD,CAAU0F,GAAG,cCGvB4C,IACM,EADNA,IAEU,EAGV+K,G,YACF,WAAY5S,GAAO,IAAD,8BACd,4CAAMA,KACD9D,aAAe,CAChBkN,SAAS,GAEb,EAAK5M,MAAQ,EAAKN,aAElB,EAAKmN,wBAA0B,EAAKA,wBAAwB7I,KAA7B,gBAPjB,E,iFAUG,IAAD,QnByDD,SAACgC,GAAD,OAAYd,EAAa,6BAAD,OAA8Bc,KmBtDrEqQ,CAFelS,KAAKX,MAAMwC,QAGrB6C,MAAK,SAAAlG,GACoB,UAAlBA,EAAKmG,UACL,EAAKtF,MAAM8S,kBAAkB,MAGjC,EAAK9S,MAAM8S,kBAAkB3T,MAEhCqG,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,wIAErCsF,SAAQ,WACL,EAAK7J,SAAS,CAAEkI,SAAS,S,+BAKjC,IAAK7J,IACD,OAAQ,kBAAC,IAAD,CAAU0F,GAAG,aAFpB,MAUDtE,KAAKX,MAJLJ,EANC,EAMDA,KACAmT,EAPC,EAODA,gBACA/T,EARC,EAQDA,IACAG,EATC,EASDA,KAGI7C,EAAWsD,EAAXtD,OAER,OACI,kBAAC,IAAM2K,SAAP,KACI,kBAAC,GAAD,CACI8L,gBAAiBA,EACjBnT,KAAMA,EACNZ,IAAKA,IAGL2B,KAAKnE,MAAM4M,QACP,kBAAC,GAAD,MACAjK,EACI,kBAAC,GAAD,CACIgH,OAAQ0B,GACR3B,WAAY2B,GACZ1I,KAAMA,EACN7C,OAAQA,EACRiL,uBAAwB5G,KAAK0I,0BAEjC,gL,8CAMArI,GAAM,IAAD,OACnBwB,EAASxB,EAAIC,OAAO+J,QAAQxI,OAC5BwB,EAAQhD,EAAIC,OAAO+J,QAAQhH,MAEdmB,OAAOC,QAAP,0JAA+CpB,EAA/C,OAGfzB,EAAYC,GACP6C,MAAK,SAAA4F,GACFnH,GAAYmH,EAAO3F,SAAU,GAAI2F,EAAO1F,UAChB,YAApB0F,EAAO3F,UACP,EAAKtF,MAAMgT,oBAAoB,EAAKhT,MAAMb,SAGjDqG,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd3B,GAAYM,GAAYI,MAAOiB,EAAG,uG,GArF/BjE,aA6GRiD,gBAlBS,SAACjI,GACrB,MAAO,CACHoD,KAAMpD,EAAMoD,KACZT,KAAM3C,EAAM2C,SAIO,SAACuM,GACxB,MAAO,CACHoH,kBAAmB,SAAC3T,GAChBuM,ECtH2B,CAAChP,KAAM,aAAcC,QDsH7BwC,KAEvB6T,oBAAqB,SAAC7T,GAClBuM,ECxH+B,CAAChP,KAAM,eAAgBC,QDwH/BwC,QAKpBsF,CAA6CmO,IE5G/CK,I,YAAb,YACI,WAAYjT,GAAQ,IAAD,8BACf,4CAAMA,KAED9D,aAAe,CAChB+C,WAAY,IAGhB,EAAKzC,MAAQ,EAAKN,aAPH,EADvB,iFAYQ,GAAIqD,IAAmB,CACnB,IAAM6N,EAAW7P,EAAU,YAAYqB,MAAM,KACvCgB,EAAOQ,EAAY,CACrBjE,KAAMiR,EAAS,GACfhR,QAASgR,EAAS,GAClB/Q,WAAY+Q,EAAS,GACrB9Q,OAAQ8K,OAAOgG,EAAS,MAG5BzM,KAAKX,MAAMkT,oBAAoBtT,MArB3C,+BA0BQ,OACI,kBAAC,IAAD,CAAQuT,SAAS,WACb,0BAAMlT,UAAS,WACX,kBAACF,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI5B,KAAK,IACLiV,OAAK,GAEL,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CACIjV,KAAK,WAEL,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CACIA,KAAK,kBAEL,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CACIA,KAAK,qBAEL,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CACIA,KAAK,0BAEL,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CACIA,KAAK,YACD,kBAAC,GAAD,OAER,kBAAC,IAAD,CACIA,KAAK,YAED,kBAAC,GAAD,OAER,kBAAC,IAAD,CACIA,KAAK,aAED,kBAAC,GAAD,OAER,kBAAC,IAAD,CACIA,KAAK,YACLkV,OAAQ,YAAe,IAAZ1V,EAAW,EAAXA,MACC4P,EAAO5P,EAAMmE,OAAbyL,GAER,OAAO,kBAAC,GAAD,CACHvO,IAAKrB,EAAMqB,IACXwD,OAAQ+K,OAKpB,kBAAC,IAAD,KACI,6IAKhB,kBAACpN,EAAD,WAzFhB,GAAyBqB,cAqGViD,eAAQ,MANI,SAACiH,GAAD,MAAe,CACtCwH,oBAAqB,SAACtT,GAClB8L,EAAS9L,OAIF6E,CAAkCwO,IC3G7B9R,QACW,cAA7BgE,OAAOqC,SAAS8L,UAEe,UAA7BnO,OAAOqC,SAAS8L,UAEhBnO,OAAOqC,SAAS8L,SAAS3V,MACvB,2DCRN,IAAM4V,GAAqBC,YAAgBC,KACrCC,GAAoBC,YAAQJ,IAC5BK,GAAQC,YAAYC,OAAa/V,EAAW2V,IAElDK,IAASV,OACP,kBAAC,IAAD,CAAUO,MAAOA,IACf,kBAAC,GAAD,OAEAnW,SAASuW,cAAc,UDiHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9O,MAAK,SAAA+O,GACjCA,EAAaC,kB","file":"static/js/main.e8973654.chunk.js","sourcesContent":["const initialState = {\r\n    name: '',\r\n    surname: '',\r\n    patronymic: '',\r\n    userId: 0\r\n}\r\n\r\nconst reducerUser = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_INFO':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerUser;\r\n","/**\r\n * Функция для проверки длины строки, в промежутке -  >= && <=\r\n * @param str\r\n * @param minLengthStr\r\n * @param maxLengthStr\r\n * @returns {boolean|boolean}\r\n */\r\nexport const checkLengthMinMaxStr = (str, minLengthStr, maxLengthStr) => {\r\n    return (str.length >= minLengthStr) && (str.length <= maxLengthStr);\r\n};\r\n/**\r\n * Истекла ли задача\r\n * @param dateTask - дата задачи.\r\n * @returns {boolean}\r\n */\r\nexport const hasDateExpired = (dateTask) => {\r\n    const today = new Date().getTime();\r\n    const dateEnd = new Date(reverseDate(dateTask)).getTime();\r\n\r\n    return dateEnd < today;\r\n};\r\n/**\r\n * Получение Cookie по имени\r\n * @param name - имя Cookie\r\n * @returns {any}\r\n */\r\nexport const getCookie = (name) => {\r\n    let matches = document.cookie.match(new RegExp(\r\n        // eslint-disable-next-line no-useless-escape\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n};\r\n/**\r\n *  Устанавливает куки с именем name и значением value c опциями.\r\n * @param {String} name\r\n * @param {String} value\r\n * @param {Object} options\r\n */\r\nfunction setCookie(name, value, options = {}) {\r\n    options = {\r\n        path: '/',\r\n        ...options\r\n    };\r\n\r\n    if (options.expires instanceof Date) {\r\n        options.expires = options.expires.toUTCString();\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\r\n    for (let optionKey in options) {\r\n        updatedCookie += \"; \" + optionKey;\r\n        let optionValue = options[optionKey];\r\n        if (optionValue !== true) {\r\n            updatedCookie += \"=\" + optionValue;\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie;\r\n}\r\n/**\r\n * Уддаление Cookie по её имени.\r\n * @param {String} name\r\n */\r\nexport const deleteCookie = (name) => {\r\n    setCookie(name, \"\", {\r\n        'max-age': -1\r\n    })\r\n}\r\n/**\r\n * Переворачивает дату с сервера для js\r\n * @param {String} date\r\n */\r\nexport const reverseDate = (date) => {\r\n    return date.split('.').reverse().join('-');\r\n}\r\n/**\r\n * Возврашает заголовок для задач в зависимомти от активного скрина.\r\n * @param {String} url\r\n * @param {String} textSearch\r\n */\r\nexport const getActiveTitleTasks = (url, textSearch=\"\") => {\r\n    switch (url) {\r\n        case \"/my-tasks-done\":\r\n            return \"Мои выполненые задачи.\";\r\n        case \"/designated-tasks\":\r\n            return \"Я назначил задачи.\";\r\n        case \"/designated-tasks-done\":\r\n            return \"Выполненные задачи другими.\";\r\n        case \"/search\":\r\n            return `Результаты поиска по запросу - \"${textSearch}\"`;\r\n        default:\r\n            return \"Мои задачи.\";\r\n    }\r\n}\r\n/**\r\n * Удаление задачи. Для страниц с задачами.\r\n * @param {Object} tasks\r\n * @param {Number} idTask\r\n */\r\nexport const deleteTaskFromArrTasks = (tasks, idTask) => {\r\n    let copyTasks = [...tasks];\r\n    const indexTask = copyTasks.findIndex((task) => Number(task.task_id) === Number(idTask));\r\n    if (indexTask !== -1) {\r\n        // copyTasks[indexTask][\"task_status\"] = \"1\";\r\n        copyTasks.splice(indexTask, 1);\r\n    }\r\n\r\n    return copyTasks;\r\n}\r\n/**\r\n * Изменение статуса задачи для страницы задач.\r\n * @param {Object} task\r\n */\r\nexport const changeStatusTask = (task) => {\r\n    return Object.assign({}, task, { task_status: \"1\" });\r\n}\r\n/**\r\n * Получение массива активных(изменяемых в зависимости от типа адреса) ссылок для меню.\r\n * @param {String} url\r\n */\r\nexport const getActiveMenuLinks = (url) => {\r\n    switch (url) {\r\n        case \"/\":\r\n            return [\r\n                { textLink: \"Выполненые задачи мною\", href: \"/my-tasks-done\" },\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n        case \"/my-tasks-done\":\r\n            return [\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n        case \"/designated-tasks\":\r\n            return [\r\n                { textLink: \"Выполненые задачи другими\", href: \"/designated-tasks-done\" },\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n            ]\r\n        case \"/designated-tasks-done\":\r\n            return [\r\n                { textLink: \"Выполненые задачи другими\", href: \"/designated-tasks-done\" },\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n            ]\r\n        case \"/search\":\r\n            return [\r\n                { textLink: \"Мои задачи\", href: \"/\"},\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n        default:\r\n            return [\r\n                { textLink: \"Мои задачи\", href: \"/\" },\r\n                { textLink: \"Я назначил задачи\", href: \"/designated-tasks\" },\r\n            ]\r\n    }\r\n}\r\n/**\r\n * Декадирование параметра поиска\r\n * @param {String} urlOrigin\r\n */\r\nexport const decodeParamsSearchUrl = (urlOrigin) => {\r\n    if (!urlOrigin) {\r\n        return '';\r\n    }\r\n    const url = new URL(urlOrigin);\r\n    if (url.searchParams.has('q')) {\r\n        const searchTextEncode = url.searchParams.get('q');\r\n        return decodeURIComponent(searchTextEncode);\r\n    }\r\n}\r\n/*\r\n* Проверяет залогинился ли пользователь\r\n* */\r\nexport const checkLoggedUser = ()=>  (getCookie(\"userInfo\") && getCookie(\"PHPSESSID\"));\r\n","import { changeStatusTask } from \"../helpers/helpers\";\r\n\r\nconst reducerTask = (state = null, action ) => {\r\n    switch (action.type) {\r\n        case 'FETCH_TASK':\r\n            return action.payload;\r\n        case 'EXECUTE_TASK':\r\n            return changeStatusTask(action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerTask;\r\n","const reducerUsers = (state = [], action ) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_USERS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerUsers;\r\n","const reducerTasks = (state = [], action ) => {\r\n    switch (action.type) {\r\n        case 'GET_TASKS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerTasks;\r\n","import { combineReducers } from 'redux';\r\nimport user from \"./user\";\r\nimport task from \"./task\";\r\nimport users from \"./users\";\r\nimport tasks from \"./tasks\";\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    user,\r\n    task,\r\n    users,\r\n    tasks\r\n})\r\n","import React from \"react\";\r\n\r\nexport default function Container(props) {\r\n    return (\r\n        <div className=\"container\">{props.children}</div>\r\n    )\r\n}","import React from \"react\";\r\nimport Container from \"../container/container\";\r\nimport './footer.scss'\r\n\r\nexport default function Footer() {\r\n    return (<footer className=\"footer\">\r\n        <Container>\r\n            <p>Разработка Дмитриев Максим. &copy; 2019 г.</p>\r\n        </Container>\r\n    </footer>);\r\n}\r\n","export const getUserInfo = (payload) => ({ type: 'GET_USER_INFO', payload });\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchByTasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            textSearch: props.textSearch || '',\r\n            valid: false\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this._handleChangeTextSearch = this._handleChangeTextSearch.bind(this);\r\n        this._handleSubmitFormSearch = this._handleSubmitFormSearch.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                onSubmit={this._handleSubmitFormSearch}\r\n                className=\"form form_search\" method=\"get\">\r\n                <h3 className=\"form__title visually-hidden\">Поиск по задачам.</h3>\r\n                <div className=\"form__row form__row_search\">\r\n                    <input className=\"form__input form__input_search\" type=\"search\" name=\"search-field\" placeholder=\"Поиск по задачам\"\r\n                        value={this.state.textSearch}\r\n                        onChange={this._handleChangeTextSearch}\r\n                    />\r\n                    <button \r\n                        disabled={!this.state.valid}\r\n                        className=\"form__button submit\" \r\n                        type=\"submit\">Найти</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _handleChangeTextSearch(evt) {\r\n        const value = evt.target.value;\r\n        this.setState({\r\n            textSearch: value,\r\n            valid: Boolean(value.trim())\r\n        })\r\n    }\r\n\r\n    _handleSubmitFormSearch(evt) {\r\n        evt.preventDefault();\r\n        this.props.history.push(`/search?q=${encodeURIComponent(this.state.textSearch.trim())}`)\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchByTasks);\r\n","/**\r\n * Получение моих задач\r\n */\r\nexport const fetchRequest = async (\r\n  link,\r\n  params = {\r\n    method: 'GET',\r\n    cache: 'no-store'\r\n  }\r\n  ) => {\r\n\r\n  const response = await fetch(`/ajax/${link}`, params);\r\n\r\n  return await response.json();\r\n};\r\n/**\r\n * Получение моих задач\r\n */\r\nexport const getMyTasks = () => fetchRequest('get-my-tasks.php?my-tasks=ajax');\r\n/**\r\n * Получение моих выполненых задач\r\n */\r\nexport const getMyTasksDone = () => fetchRequest('get-my-tasks-done.php?my-tasks-done=ajax');\r\n/**\r\n * Получение задач поставленных мною\r\n */\r\nexport const getDesignatedTasks = () => fetchRequest('get-designated-tasks.php?get-designated-task=ajax');\r\n/**\r\n * Выполненные задачи другими\r\n */\r\nexport const getDesignatedTasksDone = () => fetchRequest('get-designated-tasks-done.php?get-designated-task-done=ajax');\r\n/**\r\n * Получение всех ользователей\r\n */\r\nexport const getAllUsers = () => fetchRequest('get-all-users.php?all-users=ajax');\r\n/**\r\n * Выполнение задачи\r\n */\r\nexport const executeTask = (idTask) => fetchRequest(`execute-task.php?execute-task=ajax&action=execute&id=${idTask}`);\r\n/**\r\n * Добавление заддачи\r\n * @param {Object} formData \r\n */\r\nexport const addTask = (formData) => fetchRequest(\r\n  `add-task.php`,\r\n  {\r\n    method: 'POST',\r\n    body: formData\r\n  }\r\n  );\r\n/**\r\n * Регистрация пользователя на сайте.\r\n * @param {Object} formData\r\n */\r\nexport const signUpUser = (formData) => fetchRequest(\r\n  `signup.php`,\r\n  {\r\n    method: 'POST',\r\n    body: formData\r\n  }\r\n  );\r\n/**\r\n * Авторизация пользователя на сайте.\r\n * @param {Object} formData\r\n */\r\nexport const signInUser = (formData) => fetchRequest(\r\n  `signin.php`,\r\n  {\r\n    method: 'POST',\r\n    body: formData\r\n  }\r\n  );\r\n/**\r\n * Выход с сайта.\r\n */\r\nexport const logOut = () => fetchRequest(`logout.php?logout=ajax&action=exit`);\r\n/**\r\n * Поиск задачи\r\n * @param {String} text \r\n */\r\nexport const getResultSearchText = (text) => fetchRequest(`get-result-search.php?search-field=${text}`);\r\n/**\r\n * Получение задаччи по её ID\r\n * @param {Number} idTask \r\n */\r\nexport const getTask = (idTask) => fetchRequest(`get-task.php?task=ajax&id=${idTask}`);","import toastr from 'toastr';\r\n\r\ntoastr.options = {\r\n    closeButton: false,\r\n    debug: false,\r\n    newestOnTop: false,\r\n    progressBar: true,\r\n    positionClass: `toast-top-center`,\r\n    onclick: null,\r\n    showDuration: `300`,\r\n    hideDuration: `1000`,\r\n    extendedTimeOut: `1000`,\r\n    showEasing: `swing`,\r\n    hideEasing: `linear`,\r\n    showMethod: `fadeIn`,\r\n    hideMethod: `fadeOut`\r\n};\r\n/**\r\n * Сообщение для пользователя\r\n * @param {String} type (`info`, `success`, `warning`, `error`)\r\n * @param {String} message `text`\r\n * @param {String} title `text`\r\n * @param {Number} time\r\n */\r\nconst showMessage = (type, message, title = ``, options = { time: 5000, preventDuplicates: false }) => {\r\n    toastr.options.timeOut = options.time;\r\n    toastr.options.preventDuplicates = options.preventDuplicates;\r\n    if (title) {\r\n        toastr[type](message, title)\r\n    } else {\r\n        toastr[type](message)\r\n    }\r\n};\r\n/**\r\n * Типы сообщений для функции showMessage\r\n */\r\nconst TypeMessage = {\r\n    INFO: `info`,\r\n    SUCCESS: `success`,\r\n    WARNING: `warning`,\r\n    ERROR: `error`\r\n};\r\n\r\nexport { showMessage, TypeMessage }\r\n","import flatpickr from 'flatpickr';\r\nimport { Russian } from 'flatpickr/dist/l10n/ru';\r\n\r\nconst CONFIG_FLATPICKR = {\r\n  locale: Russian,\r\n  defaultDate: `today`,\r\n  mode: `range`,\r\n  dateFormat: `d.m.Y`,\r\n  minDate: `today`,\r\n  weekNumbers: true,\r\n  wrap: true\r\n};\r\nlet fp;\r\n\r\n/**\r\n * Иницилизация flatpickr\r\n * @param elem\r\n */\r\nexport const initFlatpickr = (elem) => {\r\n  fp = flatpickr(elem, CONFIG_FLATPICKR);\r\n  fp.setDate(+new Date(), true, CONFIG_FLATPICKR.dateFormat);\r\n};\r\n/**\r\n * Размонтирование flatpickr\r\n */\r\nexport const destroyFlatpickr = () => {\r\n  fp.destroy();\r\n}\r\n/**\r\n * Очишает данные в flatpickr и устанавливает текушую дату\r\n */\r\nexport const clearDataFlatpickr = () => {\r\n  fp.clear();\r\n  fp.setDate(+new Date(), true, CONFIG_FLATPICKR.dateFormat);\r\n};\r\n","import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport '@ckeditor/ckeditor5-build-classic/build/translations/ru';\r\n// import { showMessage, TypeMessage } from './show-user-message';\r\n\r\nconst CONFIG = {\r\n  removePlugins: ['ImageUpload'],\r\n  toolbar: ['Heading', 'bold', 'italic', '|', 'Link', 'bulletedList', 'numberedList', 'blockQuote', 'MediaEmbed', 'Undo', 'Redo'],\r\n  language: 'ru',\r\n  mediaEmbed: {\r\n    previewsInData: true\r\n  }\r\n};\r\nlet editor;\r\n/**\r\n * Инициализация ckeditor5\r\n * @param elem\r\n * @param fn - функция получения данных из редактора.\r\n */\r\nexport const initEditor = (elem, fn) => {\r\n  // const MAX_CHARACTERS = 1000 || TEXTAREA.maxLength;\r\n\r\n  ClassicEditor.create(elem, CONFIG)\r\n    .then(newEditor => {\r\n      editor = newEditor;\r\n    editor.model.document.on('change:data', () => {\r\n        const data = editor.getData();\r\n        fn(data);\r\n    });\r\n      // return true\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n\r\n};\r\n/**\r\n * Размонтирование Редактора\r\n */\r\nexport const destroyEditor = () => {\r\n  editor.destroy()\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n}\r\n/**\r\n * Очишает введеные данные в ckeditor5\r\n */\r\nexport const clearDataEditor = () => {\r\n  editor.setData('')\r\n};\r\n","import React from \"react\";\r\nimport \"./user-menu.scss\"\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {deleteCookie, getActiveMenuLinks } from \"../../helpers/helpers\";\r\nimport {logOut} from \"../../data/data\";\r\nimport {showMessage, TypeMessage} from \"../../plugins/show-message\";\r\nimport { connect} from \"react-redux\";\r\n\r\nconst UserMenu = ({ user, url, history}) => {\r\n    const handleClickExit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const isQuestion = window.confirm(`Вы действительно хотите выйти?`);\r\n        if (isQuestion) {\r\n            logOut()\r\n                .then(response => {\r\n                    showMessage(response.msgsType, '', response.textMsgs);\r\n                    if (response.msgsType === 'success') {\r\n                        deleteCookie('PHPSESSID');\r\n                        deleteCookie('userInfo');\r\n                        history.push('/sing-in');\r\n                    }\r\n                    return true;\r\n                })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                    showMessage(TypeMessage.ERROR, e, );\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"user-menu\">\r\n            <span className=\"user-menu__user-name\">{`${user.surname} ${user.name} ${user.patronymic}`}</span>\r\n            {\r\n                getActiveMenuLinks(url).map((item, index) => {\r\n                    return (\r\n                        <Link\r\n                            className=\"user-menu__link link\"\r\n                            key={item.href + index}\r\n                            to={item.href}\r\n                            >{item.textLink}</Link>\r\n                    )\r\n                })\r\n            }\r\n            <Link\r\n                className=\"user-menu__link link\"\r\n                to=\"/add-task\"\r\n                >Поставить задачу</Link>\r\n            <a\r\n                className=\"user-menu__link user-menu__logout link\"\r\n                onClick={handleClickExit}\r\n                href=\"/log-out\">Выйти</a>\r\n        </nav>\r\n    )\r\n};\r\n\r\nUserMenu.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    user: PropTypes.shape({\r\n        surname: PropTypes.string,\r\n        name: PropTypes.string,\r\n        patronymic: PropTypes.string\r\n    }).isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ user: state.user })\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserMenu)\r\n)\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./task.scss\";\r\nimport {hasDateExpired} from \"../../helpers/helpers\";\r\nimport dompurify from 'dompurify';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst sanitizer = dompurify.sanitize;\r\n\r\nconst renderDesc = (isShow, stringAndTags) => {\r\n    return isShow ? sanitizer(stringAndTags) : \"\";\r\n}\r\n\r\nconst getTaskContent = (props) => {\r\n    const {\r\n        isShowDesc,\r\n        isMore,\r\n        task,\r\n        userId\r\n    } = props;\r\n    const {\r\n        task_date_end,\r\n        task_title,\r\n        task_desc,\r\n        task_date_start,\r\n        task_status,\r\n        task_date_no_limit,\r\n        task_id,\r\n        author_name,\r\n        author_surname,\r\n        author_patronymic,\r\n        executor_id,\r\n        executor_name,\r\n        executor_patronymic,\r\n        executor_surname\r\n    } = task;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <h3 className=\"task__title\">{task_title}</h3>\r\n            <div \r\n                className=\"task__desc\"\r\n                dangerouslySetInnerHTML={{ __html: renderDesc(isShowDesc, task_desc) }}\r\n                >\r\n            </div>\r\n            <footer className=\"task__footer\">\r\n                <div className=\"task__date-start\">Начало задачи: {task_date_start}\r\n                </div>\r\n                <div className=\"task__date-end\">Закончить задачу до: {Number(task_date_no_limit) === 1 ? 'без даты окончания' : task_date_end}\r\n                </div>\r\n                <div className=\"task__status\">Статус: {Number(task_status) ? 'Выполнено.': 'В работе.'}\r\n                </div>\r\n                <div className=\"task__execute\">\r\n                    {\r\n                        !Number(task_status) && (userId === Number(executor_id))\r\n                            ? <button\r\n                                data-id-task={task_id}\r\n                                data-title={task_title}\r\n                                onClick={props.handleClickExecuteTask}\r\n                            >Выполнить задачу</button>\r\n                            : \"\"\r\n                    }\r\n                </div>\r\n                <div className=\"task__author\">Назначил: {author_surname} {author_name} {author_patronymic}\r\n                </div>\r\n                <div className=\"task__executor\">Испонитель: {executor_surname} {executor_name} {executor_patronymic}\r\n                </div>\r\n            </footer>\r\n            {\r\n                isMore ?\r\n                    <Link\r\n                        to={location => ({ ...location, pathname: `/task/${task_id}` })}\r\n                        className=\"link\"\r\n                        >Подробнее</Link>\r\n                    : ''\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const Task = (props) => {\r\n    const {\r\n        isShowDesc,\r\n        isTasks,\r\n        task\r\n    } = props;\r\n    const {\r\n        task_date_end,\r\n        task_date_no_limit\r\n    } = task;\r\n\r\n    if (isTasks) {\r\n            return (\r\n                getTaskContent(props)\r\n            )\r\n        }\r\n\r\n    const classTaskExpired = hasDateExpired(task_date_end) && Number(task_date_no_limit) === 0 ? `task_expired` : ``;\r\n\r\n    return (\r\n        <section className={`task ${classTaskExpired} ${isShowDesc ? `task_single` : ''}`}>\r\n            {getTaskContent(props)}\r\n        </section>\r\n    )\r\n}\r\n\r\nTask.propTypes = {\r\n    isShowDesc: PropTypes.bool.isRequired,\r\n    isMore: PropTypes.bool.isRequired,\r\n    task: PropTypes.shape({\r\n        task_date_end: PropTypes.string.isRequired,\r\n        task_title: PropTypes.string.isRequired,\r\n        task_date_start: PropTypes.string.isRequired,\r\n        task_status: PropTypes.string.isRequired,\r\n        author_name: PropTypes.string.isRequired,\r\n        executor_name: PropTypes.string.isRequired,\r\n        task_id: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    handleClickMore: PropTypes.func\r\n};\r\n\r\nexport default Task\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Task from \"../task/task\";\r\nimport { hasDateExpired } from \"../../helpers/helpers\";\r\nimport \"./tasks.scss\";\r\n\r\nconst option = {\r\n    isMore: true,\r\n    isShowDesc: false,\r\n    isTasks: true\r\n};\r\n\r\nexport const Tasks = (props) => {\r\n    const {\r\n        title,\r\n        tasks,\r\n        userId\r\n        } = props;\r\n\r\n    return (\r\n        <section className=\"tasks\">\r\n            <h2 className=\"tasks__title\">{title}</h2>\r\n            {\r\n                tasks.length ?\r\n                    <ul className=\"tasks__lists\">\r\n                        {\r\n                            tasks.map((task)=> {\r\n                                const classTaskItem = option.isTasks ? 'task' : '';\r\n                                const classTaskExpired = hasDateExpired(task.task_date_end) && Number(task.task_date_no_limit) === 0 ? `task_expired` : ``;\r\n\r\n                                return (\r\n                                    <li\r\n                                        className={`tasks__item ${classTaskItem} ${classTaskExpired}`}\r\n                                        key={task.task_id}>\r\n                                        <Task\r\n                                            isMore={option.isMore}\r\n                                            isShowDesc={option.isShowDesc}\r\n                                            isTasks={option.isTasks}\r\n                                            task={task}\r\n                                            userId={userId}\r\n                                            handleClickMore={props.handleClickMore}\r\n                                            handleClickExecuteTask={props.handleClickExecuteTask}\r\n                                        />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul> :\r\n                    <div>Нет никаких задач</div>\r\n            }\r\n        </section>\r\n    )\r\n};\r\n\r\nTasks.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    tasks: PropTypes.array.isRequired,\r\n    handleClickMore: PropTypes.func\r\n};\r\nexport default Tasks","import React from \"react\";\r\nimport \"./pagination.scss\"\r\n\r\nconst Pagination = (props) => {\r\n    const {pagesCount, pageCurrentPagination} = props;\r\n    const arr = new Array(pagesCount).fill(pagesCount);\r\n    const lastPage = arr.length;\r\n    const pagePrev = (pageCurrentPagination - 1) === 0 ? 1 : (pageCurrentPagination - 1);\r\n    const pageNext = (pageCurrentPagination + 1) > lastPage ? lastPage : (pageCurrentPagination + 1);\r\n\r\n    return (\r\n        <ul className=\"pagination-list\">\r\n            <li className=\"pagination-list__item pagination-list__item_prev\">\r\n                {\r\n                    pagePrev ===  pageCurrentPagination?\r\n                        <a className=\"pagination-list__link\"\r\n                           onClick={(evt) => evt.preventDefault()}\r\n                           href=\"#prev\">&lt;</a>\r\n                        : <a className=\"pagination-list__link\"\r\n                             onClick={props.handleClickChangePagePagination}\r\n                             data-page-id-pag={pagePrev} href={\"page-\" + pagePrev}>&lt;</a>\r\n                }\r\n            </li>\r\n            {\r\n                arr.map((it, index) => (\r\n                    <li className={`pagination-list__item${pageCurrentPagination === (index + 1) ?\r\n                        \" pagination-list__item_active\" \r\n                        : \"\"}`}\r\n                        key={\"page-\" + index}>\r\n                        <a className=\"pagination-list__link\"\r\n                           onClick={props.handleClickChangePagePagination}\r\n                           data-page-id-pag={index + 1} href={\"page-\" + (index + 1)}>{index + 1}</a>\r\n                    </li>)\r\n                )\r\n            }\r\n            <li className=\"pagination-list__item pagination-list__item_next\">\r\n                {\r\n                    pageNext ===  pageCurrentPagination ?\r\n                        <a className=\"pagination-list__link\"\r\n                           onClick={(evt) => evt.preventDefault()}\r\n                           href=\"#next\">&gt;</a>\r\n                        : <a className=\"pagination-list__link\"\r\n                             onClick={props.handleClickChangePagePagination}\r\n                             data-page-id-pag={pageNext} href={\"page-\" + pageNext}>&gt;</a>\r\n                }\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default Pagination","import React from \"react\";\r\nimport \"./loading-data.scss\";\r\n\r\nconst LoadingData = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\">\r\n        <div className=\"text\">Загрузка данных</div>\r\n        <div className=\"dots\">\r\n          <div className=\"dot\"></div>\r\n          <div className=\"dot\"></div>\r\n          <div className=\"dot\"></div>\r\n          <div className=\"dot\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default LoadingData","import React, { Component } from \"react\";\r\nimport SearchByTasks from \"../components/search-by-tasks/search-by-tasks\";\r\nimport UserMenu from \"../components/user-menu/user-menu\";\r\nimport Tasks from \"../components/tasks/tasks\";\r\nimport Pagination from \"../components/pagination/pagination\";\r\nimport { getActiveTitleTasks, deleteTaskFromArrTasks, decodeParamsSearchUrl, checkLoggedUser } from \"../helpers/helpers\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getMyTasks, getMyTasksDone, getDesignatedTasks, getDesignatedTasksDone, executeTask, getResultSearchText } from \"../data/data\";\r\nimport { TypeMessage, showMessage } from '../plugins/show-message';\r\nimport LoadingData from '../components/loading-data/loading-data';\r\nimport { connect } from \"react-redux\";\r\nimport { allTasks } from \"../actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst getTextInSearchParams = (location) => {\r\n    const { search } = location;\r\n    const searchParams = new URLSearchParams(search);\r\n    return  searchParams.get(\"q\");\r\n}\r\n\r\nclass PageTasks extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.initialState = {\r\n            itemsTasks: 9,\r\n            pagesCount: 0,\r\n            pageCurrentPagination: 1,\r\n            loading: true,\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this._handleClickExecuteTask = this._handleClickExecuteTask.bind(this);\r\n        this._handleClickChangePagePagination = this._handleClickChangePagePagination.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { url } = this.props.match;\r\n\r\n        if (url === '/search') {\r\n            const textSearch =  getTextInSearchParams(this.props.location);\r\n            this._getSearchData(textSearch);\r\n        } else {\r\n            const dataFunc = this._getFuncData(url);\r\n            this._getData(dataFunc);\r\n        }\r\n    }\r\n\r\n    //TODO - уточнить про пропсы.\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { url: currUrl } = this.props.match;\r\n        const { url: nextUrl } = nextProps.match;\r\n\r\n        const isUpdate = (currUrl !== nextUrl) && (nextUrl !== '/search');\r\n\r\n        if (isUpdate) {\r\n            const dataFunc = this._getFuncData(nextUrl);\r\n            this._getData(dataFunc);\r\n            return true;\r\n        }\r\n\r\n        const textSearchCurr =  getTextInSearchParams(this.props.location);\r\n        const textSearchNext =  getTextInSearchParams(nextProps.location);\r\n        const isPageSearch = (currUrl === '/search') || (nextUrl === '/search');\r\n\r\n        if (isPageSearch && (textSearchCurr !== textSearchNext)) {\r\n            this._getSearchData(textSearchNext);\r\n            return true;\r\n        }\r\n\r\n        return (nextState.loading !== this.state.loading) || (nextState.pageCurrentPagination !== this.state.pageCurrentPagination);\r\n    }\r\n\r\n    render() {\r\n        if (!checkLoggedUser()) {\r\n            return (<Redirect to=\"/sing-in\" />)\r\n        }\r\n\r\n        const {\r\n            tasks,\r\n            user,\r\n            match,\r\n            location\r\n        } = this.props;\r\n\r\n        const { url } = match;\r\n\r\n        const { userId } = user;\r\n        const urlOrigin=`${window.location.origin}${location.search}`;\r\n\r\n        const textSearch = decodeParamsSearchUrl(urlOrigin);\r\n\r\n        const {\r\n            pageCurrentPagination,\r\n            itemsTasks,\r\n            pagesCount\r\n         } = this.state;\r\n        const visibleTasks = tasks.length ? tasks.slice((pageCurrentPagination - 1) * itemsTasks, pageCurrentPagination * itemsTasks) : tasks;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <UserMenu\r\n                    url={url}\r\n                />\r\n                {\r\n                    this.state.loading ?\r\n                        <LoadingData /> :\r\n                        <React.Fragment>\r\n                            <SearchByTasks\r\n                                textSearch={textSearch}\r\n                            />\r\n                            <Tasks\r\n                                tasks={visibleTasks}\r\n                                title={getActiveTitleTasks(url, textSearch)}\r\n                                userId={userId}\r\n                                handleClickExecuteTask={this._handleClickExecuteTask}\r\n                            />\r\n                            {\r\n                                tasks.length > itemsTasks ?\r\n                                    <Pagination\r\n                                        pagesCount={pagesCount}\r\n                                        pageCurrentPagination={pageCurrentPagination}\r\n                                        handleClickChangePagePagination={this._handleClickChangePagePagination}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    _getData(fn) {\r\n        this.setState({\r\n            loading: true,\r\n            pageCurrentPagination: this.initialState.pageCurrentPagination\r\n        });\r\n\r\n        fn()\r\n            .then(tasks => {\r\n                if (tasks.msgsType === 'error') {\r\n                    this.props.getTasksDispatch([])\r\n                    return true\r\n                }\r\n\r\n                this.props.getTasksDispatch(tasks);\r\n\r\n                const lengthTasks = tasks.length;\r\n\r\n                this.setState((state) => {\r\n                    const { itemsTasks } = state;\r\n\r\n                    return {\r\n                        pagesCount: Math.ceil((lengthTasks / itemsTasks))\r\n                    }\r\n                });\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    _getFuncData(url) {\r\n        switch (url) {\r\n            case \"/my-tasks-done\":\r\n                return getMyTasksDone\r\n            case \"/designated-tasks\":\r\n                return getDesignatedTasks\r\n            case \"/designated-tasks-done\":\r\n                return getDesignatedTasksDone\r\n            default:\r\n                return getMyTasks\r\n        }\r\n    }\r\n\r\n    _handleClickExecuteTask(evt) {\r\n        const idTask = evt.target.dataset.idTask;\r\n        const title = evt.target.dataset.title;\r\n\r\n        const isQuestion = window.confirm(`Вы хотите выполнить задачу - ${title}?`)\r\n\r\n        if (isQuestion) {\r\n            executeTask(idTask)\r\n                .then(result => {\r\n                    showMessage(result.msgsType, '', result.textMsgs);\r\n                    if (result.msgsType === 'success') {\r\n                        const newTasks = deleteTaskFromArrTasks(this.props.tasks, idTask);\r\n\r\n                        this.props.getTasksDispatch(newTasks);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                    showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n                });\r\n        }\r\n    }\r\n\r\n    _handleClickChangePagePagination(evt) {\r\n        evt.preventDefault();\r\n        this.setState({\r\n            pageCurrentPagination: +evt.target.dataset.pageIdPag\r\n        });\r\n    }\r\n\r\n    _getSearchData(textSearch) {\r\n        getResultSearchText(textSearch)\r\n            .then(tasks => {\r\n                if (tasks.msgsType === 'warning') {\r\n                    this.props.getTasksDispatch([]);\r\n                    this.setState({\r\n                        pageCurrentPagination: this.initialState.pageCurrentPagination\r\n                    })\r\n                    return true\r\n                }\r\n\r\n                this.props.getTasksDispatch(tasks);\r\n\r\n                const lengthTasks = tasks.length;\r\n\r\n                this.setState((state) => {\r\n                    const { itemsTasks } = state;\r\n\r\n                    return {\r\n                        pagesCount: Math.ceil((lengthTasks / itemsTasks))\r\n                    }\r\n                })\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    tasks: state.tasks\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getTasksDispatch: (tasks) => {\r\n            dispatch(allTasks(tasks));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PageTasks));\r\n","export const allTasks = (payload) => ({ type: 'GET_TASKS', payload });\r\n","export const ConfMinAndMax = Object.freeze({\r\n        MIN_LENGTH_LOGIN: 2,\r\n        MAX_LENGTH_LOGIN: 20,\r\n        MIN_LENGTH_PASSWORD: 6,\r\n        MAX_LENGTH_PASSWORD: 20,\r\n        MIN_LENGTH_TEXT: 2,\r\n        MAX_LENGTH_TEXT: 20\r\n    });\r\nexport const ConfMinAndMaxAddTask = Object.freeze({\r\n        MIN_LENGTH_TEXT: 2,\r\n        MAX_LENGTH_TEXT_TITLE: 255,\r\n        MAX_LENGTH_TEXT_DESK: 255,\r\n    });\r\nexport const ConfTimes = Object.freeze({\r\n        REDIRECTION_SIGN_IN_TIME: 3000,\r\n        REDIRECTION_TASKS_TIME: 3000,\r\n    });\r\n","import React, { Component } from \"react\";\r\nimport \"./forms.scss\";\r\nimport {checkLengthMinMaxStr, getCookie} from \"../../helpers/helpers\";\r\nimport { ConfMinAndMax } from \"../../vars/vars\";\r\nimport { checkLoggedUser } from \"../../helpers/helpers\";\r\nimport { signInUser } from \"../../data/data\";\r\nimport { TypeMessage, showMessage } from '../../plugins/show-message';\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect} from \"react-redux\";\r\nimport { getUserInfo } from \"../../actions\";\r\n\r\n\r\nclass FormSingIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            login: \"\",\r\n            password: \"\",\r\n            validForm: false\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this._handleSubmitForm}\r\n                className=\"form form_center form_auth\"\r\n                method=\"post\">\r\n                <h3 className=\"form__title\">Авторизация</h3>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"login\">Ваш логин:</label>\r\n                    <input\r\n                        value={this.state.login}\r\n                        onChange={this._handleLoginChange}\r\n                        className=\"form__input input\"\r\n                        id=\"login\" type=\"text\" name=\"login\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_LOGIN}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_LOGIN}\r\n                        required=\"required\"/>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"password\">Пароль:</label>\r\n                    <input\r\n                        value={this.state.password}\r\n                        onChange={this._handlePasswordChange}\r\n                        className=\"form__input input\"\r\n                        id=\"password\" type=\"password\" name=\"password\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_PASSWORD}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_PASSWORD}\r\n                        required=\"required\"/>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <button\r\n                        className=\"form__button submit\"\r\n                        disabled={!this.state.validForm}\r\n                        type=\"submit\">Войти</button>\r\n                </div>\r\n                <div className=\"form__row form__row_text-center\">\r\n                    <Link\r\n                        to=\"/sing-up\"\r\n                        className=\"form__link-signup link\"\r\n                        >Зарегистрироваться</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _validateForm = (state) => {\r\n        const {login, password} = state;\r\n        const isValidLogin = checkLengthMinMaxStr(login, ConfMinAndMax.MIN_LENGTH_LOGIN, ConfMinAndMax.MAX_LENGTH_LOGIN);\r\n        const isValidPassword = checkLengthMinMaxStr(password, ConfMinAndMax.MIN_LENGTH_PASSWORD, ConfMinAndMax.MAX_LENGTH_PASSWORD);\r\n\r\n        return isValidLogin && isValidPassword;\r\n    };\r\n\r\n    _handleLoginChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            login: value,\r\n            validForm: this._validateForm(Object.assign({}, state, {login: value}))\r\n        }));\r\n    };\r\n\r\n    _handlePasswordChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            password: value,\r\n            validForm: this._validateForm(Object.assign({}, state, {password: value}))\r\n        }));\r\n    };\r\n\r\n    _handleSubmitForm = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        let formData = new FormData(evt.target);\r\n        formData.append('signin', 'ajax');\r\n\r\n        signInUser(formData)\r\n            .then(result => {\r\n                showMessage(result.msgsType, '', result.textMsgs);\r\n                if (result.msgsType === 'success') {\r\n                    this.setState(this.initialState);\r\n\r\n                    if (checkLoggedUser()) {\r\n                        const userInfo = getCookie(\"userInfo\").split(\";\");\r\n                        const user = getUserInfo({\r\n                            name: userInfo[0],\r\n                            surname: userInfo[1],\r\n                            patronymic: userInfo[2],\r\n                            userId: Number(userInfo[3])\r\n                        });\r\n\r\n                        this.props.getUserInfoToProps(user);\r\n                        this.props.history.push('/');\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n            });\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUserInfoToProps: (user) => (dispatch(user))\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(null, mapDispatchToProps)(FormSingIn)\r\n)\r\n","import React from \"react\";\r\nimport FormSingIn from \"../components/forms/form-sing-in\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { checkLoggedUser} from \"../helpers/helpers\";\r\n\r\n\r\nconst PageSingIn = () => {\r\n\r\n    if (checkLoggedUser()) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n\r\n    return (\r\n        <FormSingIn />\r\n    )\r\n};\r\nexport default PageSingIn\r\n","import React, { Component } from \"react\";\r\nimport \"./forms.scss\"\r\nimport { checkLengthMinMaxStr } from \"../../helpers/helpers\";\r\nimport { ConfMinAndMax } from \"../../vars/vars\";\r\nimport { showMessage, TypeMessage } from \"../../plugins/show-message\";\r\nimport { signUpUser } from \"../../data/data\";\r\n\r\nimport { Link} from \"react-router-dom\";\r\n\r\nclass FormSingUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            login: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            name: \"\",\r\n            surname: \"\",\r\n            patronymic: \"\",\r\n            validForm: false\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <form\r\n                onSubmit={this._handleSubmitForm}\r\n                className=\"form form_center form_reg\"\r\n                method=\"post\">\r\n                <h3 className=\"form__title\">Регистрация нового пользователя\r\n                </h3>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"login\">Ваш логин:</label>\r\n                    <input\r\n                        value={this.state.login}\r\n                        onChange={this._handleLoginChange}\r\n                        className=\"form__input input\"\r\n                        id=\"login\" type=\"text\" name=\"login\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_LOGIN}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_LOGIN}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"password\">Пароль:</label>\r\n                    <input\r\n                        value={this.state.password}\r\n                        onChange={this._handlePasswordChange}\r\n                        className=\"form__input input\"\r\n                        id=\"password\" type=\"password\" name=\"password\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_PASSWORD}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_PASSWORD}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"password2\">Повторите пароль:</label>\r\n                    <input\r\n                        value={this.state.password2}\r\n                        onChange={this._handlePassword2Change}\r\n                        onBlur={this._onBlurInput}\r\n                        className=\"form__input input\"\r\n                        id=\"password2\" type=\"password\" name=\"password2\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_PASSWORD}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_PASSWORD}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"name\">Имя:</label>\r\n                    <input\r\n                        value={this.state.name}\r\n                        onChange={this._handleNameChange}\r\n                        className=\"form__input input\"\r\n                        id=\"name\" type=\"text\" name=\"name\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_TEXT}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_TEXT}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"surname\">Фамилия:</label>\r\n                    <input\r\n                        value={this.state.surname}\r\n                        onChange={this._handleSurnameChange}\r\n                        className=\"form__input input\"\r\n                        id=\"surname\" type=\"text\" name=\"surname\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_TEXT}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_TEXT}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label htmlFor=\"patronymic\">Отчество:</label>\r\n                    <input\r\n                        value={this.state.patronymic}\r\n                        onChange={this.handlePatronymicChange}\r\n                        className=\"form__input input\"\r\n                        id=\"patronymic\" type=\"text\" name=\"patronymic\"\r\n                        minLength={ConfMinAndMax.MIN_LENGTH_TEXT}\r\n                        maxLength={ConfMinAndMax.MAX_LENGTH_TEXT}\r\n                        required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <button\r\n                        disabled={!this.state.validForm}\r\n                        className=\"form__button submit\"\r\n                        type=\"submit\">Зарегистрироваться</button>\r\n                </div>\r\n                <div className=\"form__row form__row_text-center\">\r\n                    <Link\r\n                        to=\"/sing-in\"\r\n                        className=\"form__link-signup link\"\r\n                    >Авторизоваться</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _validateForm = (state) => {\r\n        const { login, password, password2, name, surname, patronymic } = state;\r\n        const isValidLogin = checkLengthMinMaxStr(login, ConfMinAndMax.MIN_LENGTH_LOGIN, ConfMinAndMax.MAX_LENGTH_LOGIN);\r\n        const isValidPassword = checkLengthMinMaxStr(password, ConfMinAndMax.MIN_LENGTH_PASSWORD, ConfMinAndMax.MAX_LENGTH_PASSWORD);\r\n        const isValidPassword2 = checkLengthMinMaxStr(password2, ConfMinAndMax.MIN_LENGTH_PASSWORD, ConfMinAndMax.MAX_LENGTH_PASSWORD);\r\n        const isValidEquallyPassword = password === password2;\r\n        const isValidName = checkLengthMinMaxStr(name, ConfMinAndMax.MIN_LENGTH_TEXT, ConfMinAndMax.MAX_LENGTH_TEXT);\r\n        const isValidSurname = checkLengthMinMaxStr(surname, ConfMinAndMax.MIN_LENGTH_TEXT, ConfMinAndMax.MAX_LENGTH_TEXT);\r\n        const isValidPatronymic = checkLengthMinMaxStr(patronymic, ConfMinAndMax.MIN_LENGTH_TEXT, ConfMinAndMax.MAX_LENGTH_TEXT);\r\n\r\n        return isValidLogin && isValidPassword && isValidPassword2 && isValidEquallyPassword && isValidName && isValidSurname && isValidPatronymic;\r\n    };\r\n\r\n    _handleLoginChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            login: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { login: value }))\r\n        }));\r\n    };\r\n\r\n    _handlePasswordChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            password: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { password: value }))\r\n        }));\r\n    };\r\n\r\n    _handlePassword2Change = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            password2: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { password2: value }))\r\n        }));\r\n    };\r\n\r\n    _handleNameChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            name: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { name: value }))\r\n        }));\r\n    };\r\n\r\n    _handleSurnameChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            surname: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { surname: value }))\r\n        }));\r\n    };\r\n\r\n    handlePatronymicChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            patronymic: value,\r\n            validForm: this._validateForm(Object.assign({}, state, { patronymic: value }))\r\n        }));\r\n    };\r\n\r\n    _handleSubmitForm = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        let formData = new FormData(evt.target);\r\n        formData.append('signup', 'ajax');\r\n\r\n        signUpUser(formData)\r\n            .then(result => {\r\n                showMessage(result.msgsType, '', result.textMsgs);\r\n                if (result.msgsType === 'success') {\r\n                    this.setState(this.initialState);\r\n\r\n                    return true\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n            });\r\n    };\r\n\r\n    _onBlurInput = () => {\r\n        const { password, password2 } = this.state;\r\n        if (password.length >= ConfMinAndMax.MIN_LENGTH_PASSWORD && password !== password2) {\r\n            showMessage(TypeMessage.WARNING, `В поле \"Повторите пароль\", пароль не совпадает с полем \"Пароль\"!`);\r\n        }\r\n    };\r\n}\r\nexport default FormSingUp","import React from \"react\";\r\nimport FormSingUp from \"../components/forms/form-sing-up\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { checkLoggedUser} from \"../helpers/helpers\";\r\n\r\n\r\nconst PageSingUp = () => {\r\n    if (checkLoggedUser()) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n\r\n    return (\r\n        <FormSingUp/>\r\n    )\r\n};\r\nexport default PageSingUp\r\n","import React, { Component } from \"react\";\r\nimport \"./forms.scss\";\r\n\r\nimport { initFlatpickr, destroyFlatpickr } from \"../../plugins/flatpickr\";\r\nimport { initEditor, destroyEditor } from \"../../plugins/editor\";\r\nimport { checkLengthMinMaxStr } from \"../../helpers/helpers\";\r\nimport { ConfMinAndMaxAddTask } from \"../../vars/vars\";\r\nimport { getAllUsers } from \"../../data/data\";\r\nimport { TypeMessage, showMessage } from '../../plugins/show-message';\r\nimport { addTask } from \"../../data/data\";\r\nimport { clearDataEditor } from \"../../plugins/editor\";\r\nimport { clearDataFlatpickr } from \"../../plugins/flatpickr\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { allUsers } from \"../../actions\";\r\n\r\n\r\nclass FormAddTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            selectedDates: \"\",\r\n            isCheckedDateNoLimit: false,\r\n            valueSelect: \"disabled\",\r\n            titleTask: \"\",\r\n            descTask: \"\",\r\n            validForm: false,\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this.inputDatesRef = React.createRef();\r\n        this.textareaRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        initFlatpickr(this.inputDatesRef.current);\r\n        initEditor(this.textareaRef.current, this._handleDescTaskChange);\r\n        getAllUsers()\r\n            .then(users => {\r\n                if (users.msgsType === 'error') {\r\n                    this.props.getAllUsersDispatch([]);\r\n                    return;\r\n                }\r\n\r\n                this.props.getAllUsersDispatch(users);\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        destroyEditor();\r\n        destroyFlatpickr();\r\n    }\r\n\r\n    render() {\r\n      const { userId: userIdCurrent } = this.props.user;\r\n\r\n        return (\r\n            <form\r\n                onSubmit={this.handleSubmitForm}\r\n                className=\"form form_task-add\"\r\n                action=\"\" method=\"post\">\r\n                <div className=\"form__row form__row_label-group-two\">\r\n                    <label htmlFor=\"date\">Дата начала и окончания задачи</label>\r\n                    <div\r\n                        ref={this.inputDatesRef}\r\n                        className=\"flatpickr\">\r\n                        <input\r\n                            className=\"form__date input\"\r\n                            onInput={this._handleDatesChange}\r\n                            id=\"date\" type=\"text\" name=\"date\"\r\n                            placeholder=\"выберите дату или даты\" data-input=\"data-input\" required=\"required\" />\r\n                        <button type=\"button\" title=\"Открыт/Закрыть календарь\" data-toggle=\"\">календарь</button>\r\n                        <button type=\"button\" title=\"Очистить календарь\" data-clear=\"\">очистить</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form__row\">\r\n                    <input\r\n                        className=\"form__checkbox\"\r\n                        onChange={this._handleDateNoLimitChange}\r\n                        checked={this.state.isCheckedDateNoLimit}\r\n                        type=\"checkbox\" name=\"date-no-limit\" id=\"date-no-limit\" />\r\n                    <label htmlFor=\"date-no-limit\">Без даты окончания (дата окончания выбранная выше, будет игнорирована)</label>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <span>Выберите исполнителя</span>\r\n                    <select\r\n                        value={this.state.valueSelect}\r\n                        onChange={this._handleSelectChange}\r\n                        className=\"form__select\" name=\"executor\" required=\"required\">\r\n                        <option value=\"disabled\" disabled=\"disabled\">Не выбрано</option>\r\n                        {\r\n                            this.props.users.map(user => (\r\n                                <option\r\n                                    value={user.user_id}\r\n                                    key={user.user_id}\r\n                                > { userIdCurrent === Number(user.user_id) ? \"Я\" : `${user.user_surname} ${user.user_name} ${user.user_patronymic}` } </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label>Загаловок задачи</label>\r\n                    <textarea\r\n                        value={this.state.titleTask}\r\n                        onChange={this._handleTitleTaskChange}\r\n                        className=\"form__title-add textarea\" name=\"title\" maxLength=\"255\" placeholder=\"сделать ...\" required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_content-column\">\r\n                    <label>Дополнительная информация по задаче</label>\r\n                    <textarea\r\n                        className=\"textarea\"\r\n                        ref={this.textareaRef}\r\n                        value={this.state.descTask}\r\n                        onChange={this._handleDescTaskChange}\r\n                        id=\"textarea-text\" name=\"text\" maxLength=\"1000\" placeholder=\"Обьяснение задачи ...\" required=\"required\" />\r\n                </div>\r\n                <div className=\"form__row form__row_text-center\">\r\n                    <button\r\n                        disabled={!this.state.validForm}\r\n                        className=\"form__submit submit\"\r\n                        type=\"submit\">Добавить задачу</button>\r\n                    <Link\r\n                        className=\"form__link link\"\r\n                        to=\"/\"\r\n                    >К списку моих задач</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    _validateForm = (state) => {\r\n        const { selectedDates, valueSelect, titleTask, descTask } = state;\r\n        const isValidValueSelect = valueSelect !== \"disabled\";\r\n        const isValidTitleTask = checkLengthMinMaxStr(titleTask, ConfMinAndMaxAddTask.MIN_LENGTH_TEXT, ConfMinAndMaxAddTask.MAX_LENGTH_TEXT_TITLE);\r\n        const isValidDescTask = checkLengthMinMaxStr(descTask, ConfMinAndMaxAddTask.MIN_LENGTH_TEXT, ConfMinAndMaxAddTask.MAX_LENGTH_TEXT_DESK);\r\n\r\n        return selectedDates && isValidValueSelect && isValidTitleTask && isValidDescTask;\r\n    };\r\n\r\n    _handleDatesChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            selectedDates: value,\r\n            validForm: this._validateForm(Object.assign(state, { selectedDates: value }))\r\n        }));\r\n    };\r\n\r\n    _handleDateNoLimitChange = () => {\r\n        this.setState((state) => ({\r\n            isCheckedDateNoLimit: !state.isCheckedDateNoLimit\r\n        }));\r\n    };\r\n\r\n    _handleTitleTaskChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            titleTask: value,\r\n            validForm: this._validateForm(Object.assign(state, { titleTask: value }))\r\n        }));\r\n    };\r\n\r\n    _handleDescTaskChange = (data) => {\r\n        this.setState((state) => ({\r\n            descTask: data,\r\n            validForm: this._validateForm(Object.assign(state, { descTask: data }))\r\n        }));\r\n    };\r\n\r\n    _handleSelectChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            valueSelect: value,\r\n            validForm: this._validateForm(Object.assign(state, { valueSelect: value }))\r\n        }));\r\n    };\r\n\r\n    handleSubmitForm = (evt) => {\r\n        evt.preventDefault();\r\n        let FORM_DATA = new FormData(evt.target);\r\n        FORM_DATA.append('add-task', 'ajax');\r\n\r\n        addTask(FORM_DATA)\r\n            .then(result => {\r\n                showMessage(result.msgsType, '', result.textMsgs);\r\n                if (result.msgsType === 'success') {\r\n                    this.setState({\r\n                        isCheckedDateNoLimit: false,\r\n                        valueSelect: \"disabled\",\r\n                        titleTask: \"\",\r\n                        validForm: false,\r\n                    })\r\n\r\n                    clearDataEditor();\r\n                    clearDataFlatpickr();\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n            });\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    users: state.users\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllUsersDispatch: (users) => {\r\n            dispatch(allUsers(users));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormAddTask);\r\n","export const allUsers = (payload) => ({ type: 'GET_ALL_USERS', payload });\r\n","import React from \"react\";\r\nimport FormAddTask from \"../components/forms/form-add-task\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { checkLoggedUser } from '../helpers/helpers'\r\n\r\nconst PageAddTask = () => {\r\n\r\n    if (!checkLoggedUser()) {\r\n        return (<Redirect to=\"/sing-in\" />)\r\n    }\r\n\r\n    return (\r\n        <FormAddTask />\r\n    )\r\n};\r\nexport default PageAddTask\r\n","import React, { Component } from \"react\";\r\nimport Task from \"../components/task/task\"\r\nimport UserMenu from \"../components/user-menu/user-menu\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoadingData from '../components/loading-data/loading-data';\r\nimport { getTask, executeTask } from \"../data/data\";\r\nimport { TypeMessage, showMessage } from '../plugins/show-message';\r\nimport { checkLoggedUser } from \"../helpers/helpers\";\r\nimport {connect} from \"react-redux\";\r\nimport { fetchTask, toPerformTask } from \"../actions\";\r\n\r\n\r\nconst option = {\r\n    isMore: false,\r\n    isShowDesc: true\r\n};\r\n\r\nclass PageTask extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.initialState = {\r\n            loading: true\r\n        };\r\n        this.state = this.initialState;\r\n\r\n        this._handleClickExecuteTask = this._handleClickExecuteTask.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const idTask = this.props.idTask;\r\n\r\n        getTask(idTask)\r\n            .then(task => {\r\n                if (task.msgsType === 'error') {\r\n                    this.props.fetchTaskDispatch(null);\r\n                }\r\n\r\n                this.props.fetchTaskDispatch(task);\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                showMessage(TypeMessage.ERROR, e, 'Ошибка получения данных.');\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (!checkLoggedUser()) {\r\n            return (<Redirect to=\"/sing-in\" />)\r\n        }\r\n\r\n        const {\r\n            user,\r\n            handleClickExit,\r\n            url,\r\n            task\r\n        } = this.props;\r\n\r\n        const { userId } = user;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <UserMenu\r\n                    handleClickExit={handleClickExit}\r\n                    user={user}\r\n                    url={url}\r\n                />\r\n                {\r\n                    this.state.loading ?\r\n                        <LoadingData /> :\r\n                        task ?\r\n                            <Task\r\n                                isMore={option.isMore}\r\n                                isShowDesc={option.isShowDesc}\r\n                                task={task}\r\n                                userId={userId}\r\n                                handleClickExecuteTask={this._handleClickExecuteTask}\r\n                            /> :\r\n                            <p>Такая задача не существует!</p>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    _handleClickExecuteTask(evt) {\r\n        const idTask = evt.target.dataset.idTask;\r\n        const title = evt.target.dataset.title;\r\n\r\n        const isQuestion = window.confirm(`Вы хотите выполнить задачу - ${title}?`)\r\n\r\n        if (isQuestion) {\r\n            executeTask(idTask)\r\n                .then(result => {\r\n                    showMessage(result.msgsType, '', result.textMsgs);\r\n                    if (result.msgsType === 'success') {\r\n                        this.props.executeTaskDispatch(this.props.task);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                    showMessage(TypeMessage.ERROR, e, 'Произошла ошибка.');\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        task: state.task\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchTaskDispatch: (task) => {\r\n            dispatch(fetchTask(task));\r\n        },\r\n        executeTaskDispatch: (task) => {\r\n            dispatch(toPerformTask(task));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTask);\r\n","export const fetchTask = (payload) => ({type: 'FETCH_TASK', payload});\r\nexport const toPerformTask = (payload) => ({type: 'EXECUTE_TASK', payload});\r\n","import React, { Component } from 'react';\nimport Container from \"./components/container/container\";\nimport Footer from './components/footer/footer';\nimport { getCookie,  checkLoggedUser } from  \"./helpers/helpers\";\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect} from \"react-redux\";\nimport { getUserInfo} from \"./actions\";\n\nimport PageTasks from './pages/page-tasks';\nimport PageSingIn from './pages/page-sign-in';\nimport PageSingUp from './pages/page-sign-up';\nimport PageAddTask from \"./pages/page-add-task\";\nimport PageTask from \"./pages/page-task\";\n\nimport 'normalize.css';\nimport './Common.scss';\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.initialState = {\n            textSearch: '',\n        };\n\n        this.state = this.initialState;\n    }\n\n    componentDidMount() {\n        if (checkLoggedUser()) {\n            const userInfo = getCookie(\"userInfo\").split(\";\");\n            const user = getUserInfo({\n                name: userInfo[0],\n                surname: userInfo[1],\n                patronymic: userInfo[2],\n                userId: Number(userInfo[3])\n            });\n\n            this.props.getUserInfoDispatch(user);\n        }\n    }\n\n    render() {\n        return (\n            <Router basename=\"/react/\" >\n                <main className={`bg main`}>\n                    <Container>\n                        <Switch>\n                            <Route\n                                path=\"/\"\n                                exact\n                            >\n                                <PageTasks/>\n                            </Route>\n                            <Route\n                                path=\"/search\"\n                            >\n                                <PageTasks/>\n                            </Route>\n                            <Route\n                                path=\"/my-tasks-done\"\n                            >\n                                <PageTasks/>\n                            </Route>\n                            <Route\n                                path=\"/designated-tasks\"\n                            >\n                                <PageTasks/>\n                            </Route>\n                            <Route\n                                path=\"/designated-tasks-done\"\n                            >\n                                <PageTasks/>\n                            </Route>\n                            <Route\n                                path=\"/sing-up\" >\n                                    <PageSingUp />\n                            </Route>\n                            <Route\n                                path=\"/sing-in\"\n                                >\n                                    <PageSingIn />\n                            </Route>\n                            <Route\n                                path=\"/add-task\"\n                                >\n                                    <PageAddTask />\n                            </Route>\n                            <Route\n                                path=\"/task/:id\"\n                                render={({ match })=> {\n                                    const { id } = match.params;\n\n                                    return <PageTask\n                                        url={match.url}\n                                        idTask={id}\n                                    />\n                                    }\n                                }\n                                />\n                            <Route>\n                                <h1>Такой страницы нету!</h1>\n                            </Route>\n                        </Switch>\n                    </Container>\n                </main>\n                <Footer />\n            </Router>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getUserInfoDispatch: (user) => {\n        dispatch(user);\n    }\n})\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore, compose } from 'redux'\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst middlewareEnhancer = applyMiddleware(thunkMiddleware);\nconst composedEnhancers = compose(middlewareEnhancer);\nconst store = createStore(rootReducer, undefined, composedEnhancers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.querySelector('.root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}